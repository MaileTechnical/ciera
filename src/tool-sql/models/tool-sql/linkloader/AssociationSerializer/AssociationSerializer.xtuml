-- BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

INSERT INTO O_OBJ
	VALUES ("4ee77a1c-599d-4ea8-93ac-82e28ec6a0fe",
	'AssociationSerializer',
	1,
	'AssociationSerializer',
	'Instances are configured to render serialization methods for the persistent associations defined in the compiled application.
Serializers hold values which will be supplied to templates during rendering of serialization code.',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("0018c1ec-9a6a-4909-a667-d2c71f1b9f70",
	"4ee77a1c-599d-4ea8-93ac-82e28ec6a0fe",
	'render_invocation',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// Render an invocation of a serialization method for an association for which this class represents the deemed formalizer.
class_name = self.formalizing_class_name;
rnum_str =  STRING::itoa( i: self.rel_num );
T::include(file:"loader/t.linkserializer.invoke.java");',
	1,
	'',
	"d776feff-1873-426f-b7fb-0547d7f3366a",
	0,
	0);
INSERT INTO O_TFR
	VALUES ("d776feff-1873-426f-b7fb-0547d7f3366a",
	"4ee77a1c-599d-4ea8-93ac-82e28ec6a0fe",
	'get_id_accessor',
	'Find the attribute serializer responsible for serializing the identifier of an instance of the supplied class.
Return the name of the method which is invoked to ''get'' the identifier value.',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	' // Retrieve the accessor method name used to ''get'' the identifier of an instance of the named class.
 // This is found as the ''value'' attribute of the ''UniqueId'' attribute serializer for the class.
 //
 select any inst_serializer related by self->Z_PopulationLoader[R3019.''renders for'']
                                           ->Z_InstanceSerializer[R3001]
  where ( selected.class_name == param.class_name );
 select any serializer related by inst_serializer->Z_AttributeSerializer[R3002]->UniqueIDSerializer[R3004];
 if ( not_empty serializer )
   return serializer.value;
 else
   return "";
 end if;',
	1,
	'',
	"00000000-0000-0000-0000-000000000000",
	0,
	1);
INSERT INTO O_TPARM
	VALUES ("eacbed7b-61c7-45aa-a8c4-997bcb249b09",
	"d776feff-1873-426f-b7fb-0547d7f3366a",
	'class_name',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TFR
	VALUES ("dbdc8771-aae3-4730-896e-68831936d269",
	"4ee77a1c-599d-4ea8-93ac-82e28ec6a0fe",
	'render_method',
	'',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'// Render a serialization method for an association for which this class represents the deemed formalizer.
// This may be either an ID couplet, for a binary, or triplet for an associative relationship.
// The formalizing class ID - represented here - is followed by 2nd and, possibly, 3rd ID''s of participants.
// Invoke render methods for components of the method body; each result is a code fragment, captured as T::body();
// Finally, supply the named result fragments to the complete method template.

select one ref2 related by self->ParticipantReference[R3023.''finds 2nd id to emit using''];
select one ref3 related by self->ParticipantReference[R3027.''finds 3rd id to emit using''];
self.link_statement = "LINK2 ";
if ( not_empty ref3 )
  self.link_statement = "LINK3 ";
end if;

rnum_str =  STRING::itoa( i: self.rel_num );
class_name = self.formalizing_class_name;

// Render the initialization of the method: either an ''if-not-null'' test, or a loop set-up.
T::push_buffer();
ref2.render_init();
init = T::body();   // note this fragment
T::pop_buffer();

// Render the code to emit the id of the instance of the formalizing class.
T::push_buffer();
UniqueIDSerializer::do_render( class_name:self.formalizing_class_name, 
                               accessor_name:self.get_id_accessor( class_name:class_name ));
self_serialize = T::body();  // note this fragment
T::pop_buffer();

// Render the code to emit the participant reference ID(s)
T::push_buffer();
ref2.render_serialization();
if ( not_empty ref3 )
  ref3.render_serialization();
end if;
referred_ids = T::body();  // note this fragment
T::pop_buffer();

// Render the method
T::include(file:"loader/t.linkserializer.method.java");
',
	1,
	'',
	"0018c1ec-9a6a-4909-a667-d2c71f1b9f70",
	0,
	2);
INSERT INTO O_NBATTR
	VALUES ("30d8fde0-3666-4a19-a2be-1ae8834842a2",
	"4ee77a1c-599d-4ea8-93ac-82e28ec6a0fe");
INSERT INTO O_BATTR
	VALUES ("30d8fde0-3666-4a19-a2be-1ae8834842a2",
	"4ee77a1c-599d-4ea8-93ac-82e28ec6a0fe");
INSERT INTO O_ATTR
	VALUES ("30d8fde0-3666-4a19-a2be-1ae8834842a2",
	"4ee77a1c-599d-4ea8-93ac-82e28ec6a0fe",
	"9b2456e9-6a70-456e-8b2f-1c7e93f0b912",
	'rel_num',
	'The number of the relationship for which serialization code will be generated by this instance of serializer.',
	'',
	'rel_num',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("4adc8bf1-6588-4762-8406-179c4fae10a1",
	"4ee77a1c-599d-4ea8-93ac-82e28ec6a0fe");
INSERT INTO O_BATTR
	VALUES ("4adc8bf1-6588-4762-8406-179c4fae10a1",
	"4ee77a1c-599d-4ea8-93ac-82e28ec6a0fe");
INSERT INTO O_ATTR
	VALUES ("4adc8bf1-6588-4762-8406-179c4fae10a1",
	"4ee77a1c-599d-4ea8-93ac-82e28ec6a0fe",
	"cb02d019-c5f0-4fa5-9ce2-992bf32ad98f",
	'link_statement',
	'The emitted ''SQL'' statement name: this will distinguish between binary (2-ID) and associative (3-ID) serialized data.',
	'',
	'link_statement',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_REF
	VALUES ("4ee77a1c-599d-4ea8-93ac-82e28ec6a0fe",
	"33909ed1-6554-468a-9d37-24e5d6bd8a24",
	0,
	"d2091965-8afb-4e17-b6bf-cde12110a906",
	"0b5cfd7d-f701-4080-a47d-6415994b2b2e",
	"af99273f-d746-4d2d-9b01-e6929d54b4f2",
	"1eac194a-7558-453f-ba93-b1933166bfd4",
	"9b2456e9-6a70-456e-8b2f-1c7e93f0b912",
	"9001e0d5-176f-461f-8a97-5c9883cf679f",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Population Loader',
	'package',
	'R3019.''renders for''');
INSERT INTO R_RGO_PROXY
	VALUES ("4ee77a1c-599d-4ea8-93ac-82e28ec6a0fe",
	"0b5cfd7d-f701-4080-a47d-6415994b2b2e",
	"af99273f-d746-4d2d-9b01-e6929d54b4f2",
	'../linkloader.xtuml');
INSERT INTO O_RTIDA_PROXY
	VALUES ("d2091965-8afb-4e17-b6bf-cde12110a906",
	"33909ed1-6554-468a-9d37-24e5d6bd8a24",
	0,
	"0b5cfd7d-f701-4080-a47d-6415994b2b2e",
	"1eac194a-7558-453f-ba93-b1933166bfd4",
	'../linkloader.xtuml');
INSERT INTO O_RATTR
	VALUES ("9b2456e9-6a70-456e-8b2f-1c7e93f0b912",
	"4ee77a1c-599d-4ea8-93ac-82e28ec6a0fe",
	"3dfc4c02-94c0-4383-8964-c3bfa4b2e9bd",
	"dc9c4877-4fcb-49df-a886-ab917b250774",
	1,
	'package');
INSERT INTO O_BATTR_PROXY
	VALUES ("3dfc4c02-94c0-4383-8964-c3bfa4b2e9bd",
	"dc9c4877-4fcb-49df-a886-ab917b250774",
	'../../../../../tool-core/models/tool-core/architecture/file/File/File.xtuml');
INSERT INTO O_ATTR
	VALUES ("9b2456e9-6a70-456e-8b2f-1c7e93f0b912",
	"4ee77a1c-599d-4ea8-93ac-82e28ec6a0fe",
	"4b6d825e-df9b-479e-99b9-43dd0dc1350f",
	'package',
	'',
	'',
	'package',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_REF
	VALUES ("4ee77a1c-599d-4ea8-93ac-82e28ec6a0fe",
	"33909ed1-6554-468a-9d37-24e5d6bd8a24",
	0,
	"20c12c58-2b72-4e9b-870f-39d9cb6c4ac9",
	"0b5cfd7d-f701-4080-a47d-6415994b2b2e",
	"af99273f-d746-4d2d-9b01-e6929d54b4f2",
	"1eac194a-7558-453f-ba93-b1933166bfd4",
	"4b6d825e-df9b-479e-99b9-43dd0dc1350f",
	"fd12153d-3827-4014-9cb3-1f19a2e6b01c",
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'Population Loader',
	'name',
	'R3019.''renders for''');
INSERT INTO O_RTIDA_PROXY
	VALUES ("20c12c58-2b72-4e9b-870f-39d9cb6c4ac9",
	"33909ed1-6554-468a-9d37-24e5d6bd8a24",
	0,
	"0b5cfd7d-f701-4080-a47d-6415994b2b2e",
	"1eac194a-7558-453f-ba93-b1933166bfd4",
	'../linkloader.xtuml');
INSERT INTO O_RATTR
	VALUES ("4b6d825e-df9b-479e-99b9-43dd0dc1350f",
	"4ee77a1c-599d-4ea8-93ac-82e28ec6a0fe",
	"c49819d1-92ba-4732-98e5-2b3eca8bc470",
	"dc9c4877-4fcb-49df-a886-ab917b250774",
	1,
	'name');
INSERT INTO O_BATTR_PROXY
	VALUES ("c49819d1-92ba-4732-98e5-2b3eca8bc470",
	"dc9c4877-4fcb-49df-a886-ab917b250774",
	'../../../../../tool-core/models/tool-core/architecture/file/File/File.xtuml');
INSERT INTO O_ATTR
	VALUES ("4b6d825e-df9b-479e-99b9-43dd0dc1350f",
	"4ee77a1c-599d-4ea8-93ac-82e28ec6a0fe",
	"00000000-0000-0000-0000-000000000000",
	'name',
	'',
	'',
	'name',
	0,
	"ba5eda7a-def5-0000-0000-000000000007",
	'',
	'');
INSERT INTO O_NBATTR
	VALUES ("cb02d019-c5f0-4fa5-9ce2-992bf32ad98f",
	"4ee77a1c-599d-4ea8-93ac-82e28ec6a0fe");
INSERT INTO O_BATTR
	VALUES ("cb02d019-c5f0-4fa5-9ce2-992bf32ad98f",
	"4ee77a1c-599d-4ea8-93ac-82e28ec6a0fe");
INSERT INTO O_ATTR
	VALUES ("cb02d019-c5f0-4fa5-9ce2-992bf32ad98f",
	"4ee77a1c-599d-4ea8-93ac-82e28ec6a0fe",
	"30d8fde0-3666-4a19-a2be-1ae8834842a2",
	'formalizing_class_name',
	'The name of the class which has been deemed to be the formalizer of the association to be serialized.
In the ordering of class ids in a serialized instance of association, the first id will be of this class.
The other id(s) will represent instances of participating class(es).',
	'',
	'formalizing_class_name',
	0,
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"4ee77a1c-599d-4ea8-93ac-82e28ec6a0fe");
INSERT INTO O_OIDA
	VALUES ("9b2456e9-6a70-456e-8b2f-1c7e93f0b912",
	"4ee77a1c-599d-4ea8-93ac-82e28ec6a0fe",
	0,
	'package');
INSERT INTO O_OIDA
	VALUES ("4b6d825e-df9b-479e-99b9-43dd0dc1350f",
	"4ee77a1c-599d-4ea8-93ac-82e28ec6a0fe",
	0,
	'name');
INSERT INTO O_ID
	VALUES (1,
	"4ee77a1c-599d-4ea8-93ac-82e28ec6a0fe");
INSERT INTO O_OIDA
	VALUES ("30d8fde0-3666-4a19-a2be-1ae8834842a2",
	"4ee77a1c-599d-4ea8-93ac-82e28ec6a0fe",
	1,
	'rel_num');
INSERT INTO O_ID
	VALUES (2,
	"4ee77a1c-599d-4ea8-93ac-82e28ec6a0fe");
INSERT INTO PE_PE
	VALUES ("4ee77a1c-599d-4ea8-93ac-82e28ec6a0fe",
	1,
	"78d04a20-e30c-4807-be87-809afebf1430",
	"00000000-0000-0000-0000-000000000000",
	4);
INSERT INTO EP_PKG_PROXY
	VALUES ("78d04a20-e30c-4807-be87-809afebf1430",
	"654f2273-90dd-487f-aef0-4050978eaf0e",
	"654f2273-90dd-487f-aef0-4050978eaf0e",
	'linkloader',
	'This package supplements the ''loader'' package, adding support for persistence of associations.
The classes defined here hold information about the referential attributes which maintain associations.
The instances are populated as part of the ''transform'' from the architectural model to persistence support.
The transform process scans the architectural model and saves data which will later be used to generate code.
The data stored in these instances will be used to ''fill'' various templates which render save/restore method code.',
	0,
	'../linkloader.xtuml');
