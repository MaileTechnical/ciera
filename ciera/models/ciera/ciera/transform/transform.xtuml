-- BP 7.1.6 content: Package syschar: 3 persistence-version: 7.1.6

INSERT INTO EP_PKG
	VALUES ("06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	"aa743d3c-66dc-49df-a19a-ffbadf9c9d1b",
	'transform',
	'',
	0);
INSERT INTO GD_MD
	VALUES ("a442477a-0195-4034-8986-e4129bb601d0",
	112,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	108,
	0,
	0,
	1,
	1,
	1,
	12,
	1,
	0,
	0,
	200,
	150,
	0,
	'',
	'ciera::ciera::transform');
INSERT INTO DIM_DIA
	VALUES ("a442477a-0195-4034-8986-e4129bb601d0",
	'',
	1.000000,
	0.000000,
	0.000000,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO S_SYNC
	VALUES ("86c4c157-03cd-481b-a5ed-c7c91b1ad36e",
	"00000000-0000-0000-0000-000000000000",
	'transformApplication',
	'',
	'root_package = param.root_package;
select one s_sys related by root_package->S_SYS[R1405];

// create the file
create object instance file of File;
file.path = T::l( s:T::r( s:s_sys.Name ) );
file.name = ::camelCaseName( name:s_sys.Name, start_lower:false ) + ".java";

// create the application object
create object instance app of Application;
app.name = ::camelCaseName( name:s_sys.Name, start_lower:false );
app.num_threads = 1;
relate app to file across R403;

// create the import block
::addStringToImports( file:file, s:"ciera.application.XtumlApplication" );
::addStringToImports( file:file, s:"ciera.components.Component" );

// translate components definitions
select many c_cs related by root_package->PE_PE[R8000]->C_C[R8001];
select any empty_comp_def from instances of ComponentDefinition where false;
for each c_c in c_cs
  ::transformComponentDefinition( c_c:c_c, containing_comp_def:empty_comp_def );
  create object instance comp_inst of ComponentInstance;
  select any comp_def from instances of ComponentDefinition where ( selected.name == ::camelCaseName( name:c_c.Name, start_lower:false ) );
  relate comp_inst to comp_def across R401;
  relate comp_inst to app across R400;
  if ( comp_def.name != app.name )
    select one comp_def_file related by comp_def->File[R403];
    ::addFileToImports( file:file, file_to_import:comp_def_file );
  end if;
end for;
select many cl_ics related by root_package->PE_PE[R8000]->CL_IC[R8001];
for each cl_ic in cl_ics
  select one c_c related by cl_ic->C_C[R4201];
  select any comp_def from instances of ComponentDefinition where ( selected.name == ::camelCaseName( name:c_c.Name, start_lower:false ) );
  if ( empty comp_def )
    ::transformComponentDefinition( c_c:c_c, containing_comp_def:empty_comp_def );
  end if;
  create object instance comp_inst of ComponentInstance;
  select any comp_def from instances of ComponentDefinition where ( selected.name == ::camelCaseName( name:c_c.Name, start_lower:false ) );
  relate comp_inst to comp_def across R401;
  relate comp_inst to app across R400;
  if ( comp_def.name != app.name )
    select one comp_def_file related by comp_def->File[R403];
    ::addFileToImports( file:file, file_to_import:comp_def_file );
  end if;
end for;
',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("6b6c262c-3690-4123-b000-38fb9cc04e80",
	"86c4c157-03cd-481b-a5ed-c7c91b1ad36e",
	'root_package',
	"9939c670-a721-4742-a824-ed4b0df4acd6",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("9939c670-a721-4742-a824-ed4b0df4acd6",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Package>',
	'',
	'',
	'../../../../../mcooa/models/mcooa/ooaofooa/Element Packaging/Element Packaging.xtuml');
INSERT INTO PE_PE
	VALUES ("86c4c157-03cd-481b-a5ed-c7c91b1ad36e",
	1,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("a77051bc-22a5-45fc-a0ba-6e4ceeaa7802",
	"00000000-0000-0000-0000-000000000000",
	'transformComponentDefinition',
	'',
	'c_c = param.c_c;
containing_comp_def = param.containing_comp_def;

// create the file
create object instance file of File;
file.path = ::c_cToPath( c_c:c_c );
file.name = ::camelCaseName( name:c_c.Name, start_lower:false ) + ".java";

// create the component definition object
create object instance comp_def of ComponentDefinition;
comp_def.name = ::camelCaseName( name:c_c.Name, start_lower:false );
comp_def.fully_qualified_name = ::pathToPackage( path:file.path ) + "." + comp_def.name;
comp_def.init_block_throws_exception = false;
relate comp_def to file across R403;

// transform inner packages
select many ep_pkgs related by c_c->PE_PE[R8003]->EP_PKG[R8001];
for each ep_pkg in ep_pkgs
  ::transformPackage( ep_pkg:ep_pkg, containing_comp_def:comp_def );
end for;

// transform innter components
select many inner_c_cs related by c_c->PE_PE[R8003]->C_C[R8001];
for each inner_c_c in inner_c_cs
  ::transformComponentDefinition( c_c:inner_c_c, containing_comp_def:comp_def );
end for;

// create import block
::addStringToImports( file:file, s:"ciera.components.Component" );
::addStringToImports( file:file, s:"ciera.classes.Where" );
select many object_files related by comp_def->Class[R414]->File[R403];
for each object_file in object_files
  ::addFileToImports( file:file, file_to_import:object_file );
  select one objectset_file related by object_file->Class[R403]->ClassSet[R411]->File[R403];
  ::addFileToImports( file:file, file_to_import:objectset_file );
end for;',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("9e250ca1-996f-471c-9f10-bb5ad2591f03",
	"a77051bc-22a5-45fc-a0ba-6e4ceeaa7802",
	'c_c',
	"67f93d18-1045-4c6c-b0d5-a692023c471c",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("67f93d18-1045-4c6c-b0d5-a692023c471c",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Component>',
	'',
	'',
	'../../../../../mcooa/models/mcooa/ooaofooa/Component/Component.xtuml');
INSERT INTO S_SPARM
	VALUES ("35145c47-5490-4738-a0b2-7e513f9ed71c",
	"a77051bc-22a5-45fc-a0ba-6e4ceeaa7802",
	'containing_comp_def',
	"1fef1559-c5b6-4eb7-a9c4-8b126b9b51a0",
	0,
	'',
	"9e250ca1-996f-471c-9f10-bb5ad2591f03",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("1fef1559-c5b6-4eb7-a9c4-8b126b9b51a0",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Component Definition>',
	'',
	'',
	'../architecture/architecture.xtuml');
INSERT INTO PE_PE
	VALUES ("a77051bc-22a5-45fc-a0ba-6e4ceeaa7802",
	1,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("1c26da85-1e78-4183-88ca-60811dc084db",
	"00000000-0000-0000-0000-000000000000",
	'transformPackage',
	'',
	'ep_pkg = param.ep_pkg;
containing_comp_def = param.containing_comp_def;
select many pe_pes related by ep_pkg->PE_PE[R8000];

// transform functions
select many s_syncs related by pe_pes->S_SYNC[R8001];
if ( not_empty s_syncs )
  // create the file
  create object instance file of File;
  file.path = ::ep_pkgToPath( ep_pkg:ep_pkg );
  file.name = ::camelCaseName( name:ep_pkg.Name, start_lower:false ) + ".java";
  
  // create the import block
  ::addStringToImports( file:file, s:containing_comp_def.fully_qualified_name );
  
  // create the function package object
  create object instance fp of FunctionPackage;
  fp.name = ::camelCaseName( name:ep_pkg.Name, start_lower:false );
  relate fp to file across R403;

  // transform functions
  for each s_sync in s_syncs
    ::transformFunction( s_sync:s_sync, fp:fp, comp_def:containing_comp_def );
  end for;
end if;

// transform packages
select many inner_ep_pkgs related by pe_pes->EP_PKG[R8001];
for each inner_ep_pkg in inner_ep_pkgs
  ::transformPackage( ep_pkg:inner_ep_pkg, containing_comp_def:containing_comp_def );
end for;

// transform constants

// transform interfaces

// transform classes
select many o_objs related by pe_pes->O_OBJ[R8001];
for each o_obj in o_objs
  ::transformClass( o_obj:o_obj, containing_comp_def:containing_comp_def );
end for;

// transform datatypes
select many edts related by pe_pes->S_DT[R8001]->S_EDT[R17]->S_DT[R17];
for each edt in edts
  ::transformEnumeratedType( s_dt:edt );
end for;

// transform components
select many c_cs related by pe_pes->C_C[R8001];
for each c_c in c_cs
  ::transformComponentDefinition( c_c:c_c, containing_comp_def:containing_comp_def );
end for;

// transform EEs
select many s_ees related by pe_pes->S_EE[R8001];
for each s_ee in s_ees
  // create the file
  create object instance file of File;
  file.path = ::ep_pkgToPath( ep_pkg:ep_pkg );
  file.name = ::camelCaseName( name:s_ee.Key_Lett, start_lower:false ) + ".java";
  
  // create the import block
  ::addStringToImports( file:file, s:containing_comp_def.fully_qualified_name );
  
  // create the function package object
  create object instance fp of FunctionPackage;
  fp.name = ::camelCaseName( name:s_ee.Key_Lett, start_lower:false );
  relate fp to file across R403;

  // transform functions
  select many s_brgs related by s_ee->S_BRG[R19];
  for each s_brg in s_brgs
    ::transformBridgeFunction( s_brg:s_brg, fp:fp, comp_def:containing_comp_def );
  end for;
end for;',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("e05335a1-ada2-43dd-bdb1-f29837aff1fc",
	"1c26da85-1e78-4183-88ca-60811dc084db",
	'ep_pkg',
	"9939c670-a721-4742-a824-ed4b0df4acd6",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_SPARM
	VALUES ("0ca0ea7b-7e27-4164-8c8f-51956eba948a",
	"1c26da85-1e78-4183-88ca-60811dc084db",
	'containing_comp_def',
	"1fef1559-c5b6-4eb7-a9c4-8b126b9b51a0",
	0,
	'',
	"e05335a1-ada2-43dd-bdb1-f29837aff1fc",
	'');
INSERT INTO PE_PE
	VALUES ("1c26da85-1e78-4183-88ca-60811dc084db",
	1,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("4372e9ec-b226-4bdc-9219-9427ca71b423",
	"00000000-0000-0000-0000-000000000000",
	'transformFunction',
	'',
	's_sync = param.s_sync;
fp = param.fp;
comp_def = param.comp_def;

// create function object
create object instance func of Function;
func.name = s_sync.Name;
relate func to fp across R404;
relate func to comp_def across R409;

// create typed object
create object instance typed_object of TypedObject;
select one s_dt related by s_sync->S_DT[R25];
type = UnresolvedType::getInstance( s_dt:s_dt );
relate type to typed_object across R410;
relate func to typed_object across R406;

// create parameters
create object instance po of ParameterizedObject;
relate func to po across R405;
select any s_sparm related by s_sync->S_SPARM[R24];
prev_s_sparm = s_sparm;
// select first parameter
while ( not_empty prev_s_sparm )
  s_sparm = prev_s_sparm;
  select one prev_s_sparm related by s_sparm->S_SPARM[R54.''succeeds''];
end while;
while ( not_empty s_sparm )
  // create parameter
  create object instance parm of Parameter;
  parm.name = s_sparm.Name;
  create object instance parm_typed_object of TypedObject;
  select one parm_dt related by s_sparm->S_DT[R26];
  parm_type = UnresolvedType::getInstance( s_dt:parm_dt );
  relate parm_type to parm_typed_object across R410;
  relate parm to parm_typed_object across R406;
  // link parameter
  relate parm to po across R424;
  select one first_parm related by po->Parameter[R407];
  if ( empty first_parm )
    relate parm to po across R407;
  else
    next_parm = first_parm;
    last_parm = first_parm;
    while ( not_empty next_parm ) 
      last_parm = next_parm;
      select one next_parm related by last_parm->Parameter[R408.''precedes''];
    end while;
    relate parm to last_parm across R408.''follows'';
  end if;
  select one s_sparm related by s_sparm->S_SPARM[R54.''precedes''];
end while;',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("20dcc580-c900-4c37-9db9-c96b57ce0c7a",
	"4372e9ec-b226-4bdc-9219-9427ca71b423",
	's_sync',
	"60690409-5a69-45db-896b-5a63a9103c18",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("60690409-5a69-45db-896b-5a63a9103c18",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Function>',
	'',
	'',
	'../../../../../mcooa/models/mcooa/ooaofooa/Domain/Domain.xtuml');
INSERT INTO S_SPARM
	VALUES ("726fb276-09fd-4ea5-a7a4-9f4dc0815b4a",
	"4372e9ec-b226-4bdc-9219-9427ca71b423",
	'fp',
	"b4ca8fd2-c6bc-40d6-af72-e591e49acc18",
	0,
	'',
	"20dcc580-c900-4c37-9db9-c96b57ce0c7a",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("b4ca8fd2-c6bc-40d6-af72-e591e49acc18",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Function Package>',
	'',
	'',
	'../architecture/architecture.xtuml');
INSERT INTO S_SPARM
	VALUES ("30cff3bd-5277-4221-8d57-b94d725a461b",
	"4372e9ec-b226-4bdc-9219-9427ca71b423",
	'comp_def',
	"1fef1559-c5b6-4eb7-a9c4-8b126b9b51a0",
	0,
	'',
	"726fb276-09fd-4ea5-a7a4-9f4dc0815b4a",
	'');
INSERT INTO PE_PE
	VALUES ("4372e9ec-b226-4bdc-9219-9427ca71b423",
	1,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("26bcd5a8-82fd-48ba-8dfc-40a65ebfd881",
	"00000000-0000-0000-0000-000000000000",
	'transformBuiltinTypes',
	'',
	'select many s_dts from instances of S_DT;
for each s_dt in s_dts

  if ( ::s_dtIsBuiltin( s_dt:s_dt ) )

    type_name = "";
    type_import = "";
    type_primitive = false;
    type_unique = false;
    type_inst = false;
    type_instset = false;
    if ( "boolean" == s_dt.Name )
      type_name = "boolean";
      type_primitive = true;
    elif ( "component_ref" == s_dt.Name )
      type_name = "Component";
      type_import = "ciera.components.Component";
    elif ( "date" == s_dt.Name )
      type_name = "Date";
      type_import = "ciera.util.Date";
    elif ( "inst<Event>" == s_dt.Name )
      type_name = "Event";
      type_import = "ciera.statemachine.Event";
    elif ( "inst_ref<Timer>" == s_dt.Name )
      type_name = "Timer";
      type_import = "ciera.util.Timer";
    elif ( "integer" == s_dt.Name )
      type_name = "int";
      type_primitive = true;
    elif ( "real" == s_dt.Name )
      type_name = "float";
      type_primitive = true;
    elif ( "string" == s_dt.Name )
      type_name = "String";
    elif ( "timestamp" == s_dt.Name )
      type_name = "TimeStamp";
      type_import = "ciera.util.TimeStamp";
    elif ( "unique_id" == s_dt.Name )
      type_name = "UniqueId";
      type_import = "ciera.util.UniqueId";
      type_unique = true;
    elif ( "void" == s_dt.Name )
      type_name = "void";
      type_primitive = true;
    elif ( "inst_ref_set<Object>" == s_dt.Name )
      type_name = "InstanceSet";
      type_import = "ciera.classes.InstanceSet";
      type_instset = true;
    elif ( "inst_ref<Object>" == s_dt.Name )
      type_name = "ModelInstance";
      type_import = "ciera.classes.ModelInstance";
      type_inst = true;
    end if;

    if ( "" != type_name )
      create object instance builtin of BuiltInType;
      builtin.name = type_name;
      builtin.import = type_import;
      builtin.primitive = type_primitive;
      builtin.unique = type_unique;
      builtin.inst = type_inst;
      builtin.instset = type_instset;
      create object instance type of Type;
      relate builtin to type across R412;
      relate builtin to s_dt across R413;
    end if;
  
  end if;

end for;',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO PE_PE
	VALUES ("26bcd5a8-82fd-48ba-8dfc-40a65ebfd881",
	1,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("5d5d0e20-88ef-45c3-9564-38aff4db30b8",
	"00000000-0000-0000-0000-000000000000",
	'transformClass',
	'',
	'o_obj = param.o_obj;
containing_comp_def = param.containing_comp_def;
select one ep_pkg related by o_obj->PE_PE[R8001]->EP_PKG[R8000];

// create the object file
create object instance file of File;
file.path = ::ep_pkgToPath( ep_pkg:ep_pkg );
file.name = ::camelCaseName( name:o_obj.Name, start_lower:false ) + ".java";

// create the object
create object instance obj of Class;
obj.name = ::camelCaseName( name:o_obj.Name, start_lower:false );
obj.key_letters = o_obj.Key_Lett;
obj.number = o_obj.Numb;
relate obj to file across R403;
relate obj to containing_comp_def across R414;

// create the instance type
create object instance type of Type;
relate type to obj across R412;

// relate to the OOA class
relate obj to o_obj across R415;

// transform attributes
select many o_attrs related by o_obj->O_ATTR[R102];
for each o_attr in o_attrs
  if ( "current_state" != o_attr.Name )
    ::transformAttribute( o_attr:o_attr, obj:obj );
  end if;
end for;

// transform operations
select many o_tfrs related by o_obj->O_TFR[R115];
for each o_tfr in o_tfrs
  ::transformOperation( o_tfr:o_tfr, obj:obj );
end for;

// transform relationships
select many r_rels related by o_obj->R_REL[R201];
for each r_rel in r_rels
  select many r_oirs related by r_rel->R_OIR[R201] where ( selected.Obj_ID == o_obj.Obj_ID );
  for each r_oir in r_oirs
    select many foreign_oirs related by r_oir->R_REL[R201]->R_OIR[R201] where ( selected.OIR_ID != r_oir.OIR_ID );
    transformed_subtype_ref = false;
    for each foreign_oir in foreign_oirs
      select one r_sub related by r_oir->R_RGO[R203]->R_SUB[R205];
      select one foreign_sub related by foreign_oir->R_RGO[R203]->R_SUB[R205];
      if ( empty r_sub or empty foreign_sub )  // subtypes do not get a reference to other subtypes
        select one r_aone related by r_oir->R_RTO[R203]->R_AONE[R204];
        select one foreign_aoth related by foreign_oir->R_RTO[R203]->R_AOTH[R204];
        select one r_aoth related by r_oir->R_RTO[R203]->R_AOTH[R204];
        select one foreign_aone related by foreign_oir->R_RTO[R203]->R_AONE[R204];
        if ( ( empty r_aone or empty foreign_aoth ) and ( empty r_aoth or empty foreign_aone ) )  // one and other do not get direct reference to each other
          if ( empty foreign_sub or ( not_empty foreign_sub and not transformed_subtype_ref ) ) // only create one subtype reference
            ::transformAssociatedClassReference( r_rel:r_rel, obj:obj, r_oir:r_oir.OIR_ID, foreign_oir:foreign_oir.OIR_ID );
            if ( not_empty foreign_sub )
              transformed_subtype_ref = true;
            end if;
          end if;
        end if;
      end if;
    end for;
  end for;
end for;

// resolve types for referential attributes
select many attrs related by obj->Attribute[R416];
for each attr in attrs
  select any ref related by attr->AssociatedClassReference[R418];
  if ( not_empty ref )
    select one s_dt related by attr->O_ATTR[R421]->O_RATTR[R106]->O_BATTR[R113]->O_ATTR[R106]->S_DT[R114];
    select one typed_object related by attr->TypedObject[R406];
    select one old_type related by typed_object->Type[R410];
    unrelate old_type from typed_object across R410;
    new_type = UnresolvedType::getInstance( s_dt:s_dt );
    relate new_type to typed_object across R410;
  end if;
end for;

// transform the set object
::transformClassSet( obj:obj, ep_pkg:ep_pkg );

// create the import block
::addStringToImports( file:file, s:"ciera.classes.EmptyInstance" );
::addStringToImports( file:file, s:"ciera.classes.ModelInstance" );',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("aa6be7c4-dd4e-4044-bbf1-81678db4c1f5",
	"5d5d0e20-88ef-45c3-9564-38aff4db30b8",
	'o_obj',
	"63f4ff99-f127-443b-a678-30ace41da702",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("63f4ff99-f127-443b-a678-30ace41da702",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Model Class>',
	'',
	'',
	'../../../../../mcooa/models/mcooa/ooaofooa/Subsystem/Subsystem.xtuml');
INSERT INTO S_SPARM
	VALUES ("9e76c7fd-92f6-44e6-92b5-aa4874148abc",
	"5d5d0e20-88ef-45c3-9564-38aff4db30b8",
	'containing_comp_def',
	"1fef1559-c5b6-4eb7-a9c4-8b126b9b51a0",
	0,
	'',
	"aa6be7c4-dd4e-4044-bbf1-81678db4c1f5",
	'');
INSERT INTO PE_PE
	VALUES ("5d5d0e20-88ef-45c3-9564-38aff4db30b8",
	1,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("a14540ae-c3dd-4248-890f-99953be47efa",
	"00000000-0000-0000-0000-000000000000",
	'transformClassSet',
	'',
	'obj = param.obj;
ep_pkg = param.ep_pkg;

// create the class set object
create object instance objset of ClassSet;
relate objset to obj across R411;

// create the object file
create object instance file of File;
file.path = ::ep_pkgToPath( ep_pkg:ep_pkg );
file.name = objset.name + ".java";

relate objset to file across R403;

// create the instance type
create object instance type of Type;
relate type to objset across R412;

// create the import block
::addStringToImports( file:file, s:"ciera.classes.InstanceSet" );
::addStringToImports( file:file, s:"ciera.classes.Where" );',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("ceb8a015-73b2-4bc0-acbc-a5fa93f21e67",
	"a14540ae-c3dd-4248-890f-99953be47efa",
	'obj',
	"ac93823e-2644-440b-977c-1f4e8480ec59",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("ac93823e-2644-440b-977c-1f4e8480ec59",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Class>',
	'',
	'',
	'../architecture/architecture.xtuml');
INSERT INTO S_SPARM
	VALUES ("72a8d944-1499-487e-9f40-06dbfc501f96",
	"a14540ae-c3dd-4248-890f-99953be47efa",
	'ep_pkg',
	"9939c670-a721-4742-a824-ed4b0df4acd6",
	0,
	'',
	"ceb8a015-73b2-4bc0-acbc-a5fa93f21e67",
	'');
INSERT INTO PE_PE
	VALUES ("a14540ae-c3dd-4248-890f-99953be47efa",
	1,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("ba8e6cdd-5bb7-4a8b-9ff5-8f0d96755d95",
	"00000000-0000-0000-0000-000000000000",
	'resolveTypes',
	'',
	'select many unresolved_types from instances of UnresolvedType;
for each unresolved_type in unresolved_types
  select one type related by unresolved_type->Type[R412];
  select one s_dt related by unresolved_type->S_DT[R419];

  select any new_type from instances of Type where false;

  // resolve builtin types
  if ( ::s_dtIsBuiltin( s_dt:s_dt ) )
    select one new_type related by s_dt->BuiltInType[R413]->Type[R412];
  else
  
  // resolve class reference types
  select one s_irdt related by s_dt->S_IRDT[R17];
  if ( not_empty s_irdt )
    select one o_obj related by s_irdt->O_OBJ[R123];
    if ( s_irdt.isSet )
      // class sets
      select one new_type related by o_obj->Class[R415]->ClassSet[R411]->Type[R412];
    else
      // classes
      select one new_type related by o_obj->Class[R415]->Type[R412];
    end if;
  else

  // resolve enumerated types
  select one s_edt related by s_dt->S_EDT[R17];
  if ( not_empty s_edt )
    select one new_type related by s_dt->EnumeratedType[R423]->Type[R412];
  end if;
  end if;
  end if;
  
  if ( not_empty new_type )
    select one old_type related by unresolved_type->Type[R412];
    select many typed_objects related by old_type->TypedObject[R410];
    for each typed_object in typed_objects
      unrelate typed_object from old_type across R410;
      relate typed_object to new_type across R410;
    end for;
    old_type.dispose();
  end if;

end for;',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO PE_PE
	VALUES ("ba8e6cdd-5bb7-4a8b-9ff5-8f0d96755d95",
	1,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("19215085-ca84-43cb-bb81-6ffd50262136",
	"00000000-0000-0000-0000-000000000000",
	'transformAttribute',
	'',
	'o_attr = param.o_attr;
obj = param.obj;

// create the attribute
create object instance attr of Attribute;
attr.base_name = o_attr.Name;
relate attr to obj across R416;

// set the type
select one s_dt related by o_attr->S_DT[R114];
type = UnresolvedType::getInstance( s_dt:s_dt );
create object instance typed_object of TypedObject;
relate type to typed_object across R410;
relate typed_object to attr across R406;

// linke OOA attribute
relate o_attr to attr across R421;',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("7b1297b8-b278-4ae8-a571-70b7bf262f38",
	"19215085-ca84-43cb-bb81-6ffd50262136",
	'o_attr',
	"579b8247-e153-481d-8926-384cdc722464",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("579b8247-e153-481d-8926-384cdc722464",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Attribute>',
	'',
	'',
	'../../../../../mcooa/models/mcooa/ooaofooa/Subsystem/Subsystem.xtuml');
INSERT INTO S_SPARM
	VALUES ("7a7146b3-82c0-458a-bf9d-b99938b7d7c7",
	"19215085-ca84-43cb-bb81-6ffd50262136",
	'obj',
	"ac93823e-2644-440b-977c-1f4e8480ec59",
	0,
	'',
	"7b1297b8-b278-4ae8-a571-70b7bf262f38",
	'');
INSERT INTO PE_PE
	VALUES ("19215085-ca84-43cb-bb81-6ffd50262136",
	1,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("a566ca37-5a57-4f7f-9212-c9cf475d697d",
	"00000000-0000-0000-0000-000000000000",
	'transformInstanceReferenceTypes',
	'',
	'// make sure an instance reference type is created for every class
select many o_objs from instances of O_OBJ;
for each o_obj in o_objs
  select one packageableElem related by o_obj->PE_PE[R8001];
  select one package related by packageableElem->EP_PKG[R8000];
  select one component related by packageableElem->C_C[R8003];

  // Make sure the IRDTs don''t already exist before creating new ones.  Check
  // the single and set version and create whatever does not exist.
  select any existing_irdt related by o_obj->S_IRDT[R123] where selected.isSet == false;
  if (empty existing_irdt) 
    create object instance pe of PE_PE;
    relate pe to package across R8000;
    pe.Visibility = Visibility::Public;
    pe.type = ElementTypeConstants::DATATYPE;
    create object instance dt of S_DT;
    relate pe to dt across R8001;
    create object instance irdt of S_IRDT;
    irdt.isSet = false;
    relate dt to irdt across R17;
    dt.Name = "inst_ref<" + o_obj.Name + ">" ;
    relate o_obj to irdt across R123;
  end if;

  select any existing_irdt_set related by o_obj->S_IRDT[R123] where selected.isSet == true;
  if (empty existing_irdt_set) 
    create object instance pe of PE_PE;
    relate pe to package across R8000;
    pe.Visibility = Visibility::Public;
    pe.type = ElementTypeConstants::DATATYPE;
    create object instance dt2 of S_DT;
    relate pe to dt2 across R8001;
    create object instance irsdt of S_IRDT;
    irsdt.isSet = true;
    relate irsdt to dt2 across R17;
    dt2.Name = "inst_ref_set<" + o_obj.Name + ">" ;
    relate o_obj to irsdt across R123;
  end if;
end for;',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO PE_PE
	VALUES ("a566ca37-5a57-4f7f-9212-c9cf475d697d",
	1,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("026a2c03-fa7a-4eac-ada9-60382ab3b543",
	"00000000-0000-0000-0000-000000000000",
	'pseudoFormalize',
	'',
	'// for simple relationships with two participants, one must
// be considered the formalizer
select many r_simps from instances of R_SIMP;
select many r_rels related by r_simps->R_REL[R206];
for each r_rel in r_rels
  if ( not ::r_rel_is_formal( r_rel:r_rel ) )

    select many refs from instances of AssociatedClassReference where ( selected.rel_numb == r_rel.Numb );
    select many basic_refs related by refs->BasicReference[R420] where ( not selected.assoc );
    // these must come in pairs
    if ( not_empty basic_refs )
      if ( 2 == cardinality basic_refs )
        select any obj1 from instances of Class where false;
        select any obj2 from instances of Class where false;
        select any basic1 from instances of BasicReference where false;
        select any basic2 from instances of BasicReference where false;
        for each basic_ref in basic_refs
          if ( empty obj1 )
            select one obj1 related by basic_ref->AssociatedClassReference[R420]->Class[R417];
            basic1 = basic_ref;
          else
            select one obj2 related by basic_ref->AssociatedClassReference[R420]->Class[R417];
            basic2 = basic_ref;
          end if;
        end for;
        // the participant with the lower class name alphanumerically will be the formalizer
        if ( 0 > STR::compare( s1:obj1.name, s2:obj2.name ) )
          basic1.formalizer = true;
        else
          basic2.formalizer = true;
        end if;
      else
        // TODO bad
        TRACE::log( flavor:"failure", id:88, message:"Simple relationship does not have two references" );
      end if;
    end if;

  end if;
end for;',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO PE_PE
	VALUES ("026a2c03-fa7a-4eac-ada9-60382ab3b543",
	1,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("eb2d19db-99fd-443a-891e-1510a4224c8a",
	"00000000-0000-0000-0000-000000000000",
	'transformEnumeratedType',
	'',
	's_dt = param.s_dt;
select one ep_pkg related by s_dt->PE_PE[R8001]->EP_PKG[R8000];

// create the file
create object instance file of File;
file.path = ::ep_pkgToPath( ep_pkg:ep_pkg );
file.name = ::camelCaseName( name:s_dt.Name, start_lower:false ) + ".java";

// create the function package object
create object instance edt of EnumeratedType;
edt.name = ::camelCaseName( name:s_dt.Name, start_lower:false );
relate edt to file across R403;
relate edt to s_dt across R423;

// create the type
create object instance type of Type;
relate type to edt across R412;

// transform enumerators
select many enums related by s_dt->S_EDT[R17]->S_ENUM[R27];
for each enumer in enums
  create object instance e of Enumerator;
  e.name = T::u( s:enumer.Name );
  relate e to edt across R422;
end for;',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("39ff61e1-b925-497a-8d8a-1ea86381dec4",
	"eb2d19db-99fd-443a-891e-1510a4224c8a",
	's_dt',
	"4a90cd45-ece0-4e72-afe7-44996f9d7e1e",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("4a90cd45-ece0-4e72-afe7-44996f9d7e1e",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Data Type>',
	'',
	'',
	'../../../../../mcooa/models/mcooa/ooaofooa/Domain/Domain.xtuml');
INSERT INTO PE_PE
	VALUES ("eb2d19db-99fd-443a-891e-1510a4224c8a",
	1,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("056fd761-beb4-4eed-85d2-b466883d17cb",
	"00000000-0000-0000-0000-000000000000",
	'resolveTypeImports',
	'',
	'select many typed_objects from instances of TypedObject;
for each typed_object in typed_objects
  typed_object.resolveImports();
end for;',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO PE_PE
	VALUES ("056fd761-beb4-4eed-85d2-b466883d17cb",
	1,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("6984d6cb-ca5f-4c52-90ce-a69cc62404e9",
	"00000000-0000-0000-0000-000000000000",
	'transformAssociatedClassReference',
	'',
	'r_rel = param.r_rel;
obj = param.obj;
select any r_oir from instances of R_OIR where ( selected.OIR_ID == param.r_oir );
select any foreign_oir from instances of R_OIR where ( selected.OIR_ID == param.foreign_oir );
select one o_obj related by obj->O_OBJ[R415];

// create the ACR instance
create object instance acr of AssociatedClassReference;
acr.rel_numb = r_rel.Numb;
relate acr to obj across R417;
  
select any foreign_dt from instances of S_DT where false;
  
// create subtype
select one foreign_sub related by foreign_oir->R_RGO[R203]->R_SUB[R205];
select one foreign_super related by foreign_oir->R_RTO[R203]->R_SUPER[R204];
select one foreign_aone related by foreign_oir->R_RTO[R203]->R_AONE[R204];
select one foreign_aoth related by foreign_oir->R_RTO[R203]->R_AOTH[R204];
select one foreign_assr related by foreign_oir->R_RGO[R203]->R_ASSR[R205];
select one foreign_part related by foreign_oir->R_RTO[R203]->R_PART[R204];
select one foreign_form related by foreign_oir->R_RGO[R203]->R_FORM[R205];
if ( not_empty foreign_sub )
  acr.unconditional = true;
  create object instance sub of SubtypeReference;
  relate sub to acr across R420;
  select any foreign_dt from instances of S_DT where ( selected.Name == "inst_ref<Object>" );
elif ( not_empty foreign_super )
  acr.unconditional = true;
  create object instance super of SupertypeReference;
  relate super to acr across R420;
  select any foreign_irdt related by foreign_oir->O_OBJ[R201]->S_IRDT[R123] where ( not selected.isSet );
  select one foreign_dt related by foreign_irdt->S_DT[R17];
else
  create object instance basic of BasicReference;
  if ( not_empty foreign_aone or not_empty foreign_aoth )
    acr.unconditional = true;
    if ( ::r_rel_is_reflexive( r_rel:r_rel ) )
      if ( not_empty foreign_aone )
        basic.phrase = ::camelCaseName( name:foreign_aone.Txt_Phrs, start_lower:false);
      else
        basic.phrase = ::camelCaseName( name:foreign_aoth.Txt_Phrs, start_lower:false);
      end if;
    else
      basic.phrase = "";
    end if;
    basic.formalizer = true;
    basic.assoc = true;
    select any foreign_irdt related by foreign_oir->O_OBJ[R201]->S_IRDT[R123] where ( not selected.isSet );
    select one foreign_dt related by foreign_irdt->S_DT[R17];
  elif ( not_empty foreign_assr )
    basic.formalizer = false;
    basic.assoc = true;
    select one r_aone related by r_oir->R_RTO[R203]->R_AONE[R204];
    select one r_aoth related by r_oir->R_RTO[R203]->R_AOTH[R204];
    if ( not_empty r_aone )
      select one foreign_oth related by r_aone->R_ASSOC[R209]->R_AOTH[R210];
      basic.phrase = ::camelCaseName( name:foreign_oth.Txt_Phrs, start_lower:false );
      if ( 0 == foreign_oth.Cond )
        acr.unconditional = true;
      else
        acr.unconditional = false;
      end if;
      if ( 0 == foreign_assr.Mult and 0 == foreign_oth.Mult )
        select any foreign_irdt related by foreign_oir->O_OBJ[R201]->S_IRDT[R123] where ( not selected.isSet );
        select one foreign_dt related by foreign_irdt->S_DT[R17];
      else
        select any foreign_irdt related by foreign_oir->O_OBJ[R201]->S_IRDT[R123] where ( selected.isSet );
        select one foreign_dt related by foreign_irdt->S_DT[R17];
      end if;
    elif ( not_empty r_aoth )
      select one foreign_one related by r_aoth->R_ASSOC[R210]->R_AONE[R209];
      basic.phrase = ::camelCaseName( name:foreign_one.Txt_Phrs, start_lower:false );
      if ( 0 == foreign_one.Cond )
        acr.unconditional = true;
      else
        acr.unconditional = false;
      end if;
      if ( 0 == foreign_assr.Mult and 0 == foreign_one.Mult )
        select any foreign_irdt related by foreign_oir->O_OBJ[R201]->S_IRDT[R123] where ( not selected.isSet );
        select one foreign_dt related by foreign_irdt->S_DT[R17];
      else
        select any foreign_irdt related by foreign_oir->O_OBJ[R201]->S_IRDT[R123] where ( selected.isSet );
        select one foreign_dt related by foreign_irdt->S_DT[R17];
      end if;
    end if;
  elif ( not_empty foreign_part )
    if ( ::r_rel_is_reflexive( r_rel:r_rel ) )
      basic.phrase = ::camelCaseName( name:foreign_part.Txt_Phrs, start_lower:false);
    else
      basic.phrase = "";
    end if;
    basic.assoc = false;
    select one r_part related by r_oir->R_RTO[R203]->R_PART[R204];
    if ( empty r_part )
      basic.formalizer = true;
    else
      basic.formalizer = false;
    end if;
    if ( 0 == foreign_part.Cond )
      acr.unconditional = true;
    else
      acr.unconditional = false;
    end if;
    if ( 0 == foreign_part.Mult )
      select any foreign_irdt related by foreign_oir->O_OBJ[R201]->S_IRDT[R123] where ( not selected.isSet );
      select one foreign_dt related by foreign_irdt->S_DT[R17];
    else
      select any foreign_irdt related by foreign_oir->O_OBJ[R201]->S_IRDT[R123] where ( selected.isSet );
      select one foreign_dt related by foreign_irdt->S_DT[R17];
    end if;
  elif ( not_empty foreign_form )
    if ( ::r_rel_is_reflexive( r_rel:r_rel ) )
      basic.phrase = ::camelCaseName( name:foreign_form.Txt_Phrs, start_lower:false);
    else
      basic.phrase = "";
    end if;
    basic.assoc = false;
    basic.formalizer = false;
    if ( 0 == foreign_form.Cond )
      acr.unconditional = true;
    else
      acr.unconditional = false;
    end if;
    if ( 0 == foreign_form.Mult )
      select any foreign_irdt related by foreign_oir->O_OBJ[R201]->S_IRDT[R123] where ( not selected.isSet );
      select one foreign_dt related by foreign_irdt->S_DT[R17];
    else
      select any foreign_irdt related by foreign_oir->O_OBJ[R201]->S_IRDT[R123] where ( selected.isSet );
      select one foreign_dt related by foreign_irdt->S_DT[R17];
    end if;
  end if;
  relate basic to acr across R420;
end if;

// relate to referential attributes
select many ref_attrs related by r_oir->R_RGO[R203]->O_REF[R111]->O_RATTR[R108]->O_ATTR[R106]->Attribute[R421];
for each ref_attr in ref_attrs
  relate acr to ref_attr across R418;
end for;

// create and link datatype
create object instance typed_object of TypedObject;
type = UnresolvedType::getInstance( s_dt:foreign_dt );
relate type to typed_object across R410;
relate acr to typed_object across R406;',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("e84e1ed0-cd4e-4b4e-91de-6e138ec2a8f6",
	"6984d6cb-ca5f-4c52-90ce-a69cc62404e9",
	'r_rel',
	"4480b008-8c74-4f57-9256-08b7365520bc",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("4480b008-8c74-4f57-9256-08b7365520bc",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Association>',
	'',
	'',
	'../../../../../mcooa/models/mcooa/ooaofooa/Association/Association.xtuml');
INSERT INTO S_SPARM
	VALUES ("65bafefe-3433-4c6d-8ab6-f21a2f0a0116",
	"6984d6cb-ca5f-4c52-90ce-a69cc62404e9",
	'obj',
	"ac93823e-2644-440b-977c-1f4e8480ec59",
	0,
	'',
	"e84e1ed0-cd4e-4b4e-91de-6e138ec2a8f6",
	'');
INSERT INTO S_SPARM
	VALUES ("010f9699-a21a-4a4a-bf15-ba9cc2602f63",
	"6984d6cb-ca5f-4c52-90ce-a69cc62404e9",
	'r_oir',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"65bafefe-3433-4c6d-8ab6-f21a2f0a0116",
	'');
INSERT INTO S_SPARM
	VALUES ("1cb8ea1b-4b6d-4c66-a5b7-3f3c705d86b0",
	"6984d6cb-ca5f-4c52-90ce-a69cc62404e9",
	'foreign_oir',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"010f9699-a21a-4a4a-bf15-ba9cc2602f63",
	'');
INSERT INTO PE_PE
	VALUES ("6984d6cb-ca5f-4c52-90ce-a69cc62404e9",
	1,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("03e1ea6e-74af-412c-b034-76ab7511674f",
	"00000000-0000-0000-0000-000000000000",
	'transformOperation',
	'',
	'o_tfr = param.o_tfr;
obj = param.obj;

// create function object
create object instance op of Operation;
op.name = "op_" + o_tfr.Name;
op.is_static = Scope::Class == o_tfr.Instance_Based;
relate op to obj across R425;

// create typed object
create object instance typed_object of TypedObject;
select one s_dt related by o_tfr->S_DT[R116];
type = UnresolvedType::getInstance( s_dt:s_dt );
relate type to typed_object across R410;
relate op to typed_object across R406;

// create parameters
create object instance po of ParameterizedObject;
relate op to po across R405;
select any o_tparm related by o_tfr->O_TPARM[R117];
prev_o_tparm = o_tparm;
// select first parameter
while ( not_empty prev_o_tparm )
  o_tparm = prev_o_tparm;
  select one prev_o_tparm related by o_tparm->O_TPARM[R124.''succeeds''];
end while;
while ( not_empty o_tparm )
  // create parameter
  create object instance parm of Parameter;
  parm.name = o_tparm.Name;
  create object instance parm_typed_object of TypedObject;
  select one parm_dt related by o_tparm->S_DT[R118];
  parm_type = UnresolvedType::getInstance( s_dt:parm_dt );
  relate parm_type to parm_typed_object across R410;
  relate parm to parm_typed_object across R406;
  // link parameter
  relate parm to po across R424;
  select one first_parm related by po->Parameter[R407];
  if ( empty first_parm )
    relate parm to po across R407;
  else
    next_parm = first_parm;
    last_parm = first_parm;
    while ( not_empty next_parm ) 
      last_parm = next_parm;
      select one next_parm related by last_parm->Parameter[R408.''precedes''];
    end while;
    relate parm to last_parm across R408.''follows'';
  end if;
  select one o_tparm related by o_tparm->O_TPARM[R124.''precedes''];
end while;',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("30ba3ab6-6d9c-4d33-bd48-006d0df3ab1c",
	"03e1ea6e-74af-412c-b034-76ab7511674f",
	'o_tfr',
	"5cb6d426-f094-4cad-8cdb-b16506c9f2e6",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("5cb6d426-f094-4cad-8cdb-b16506c9f2e6",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Operation>',
	'',
	'',
	'../../../../../mcooa/models/mcooa/ooaofooa/Subsystem/Subsystem.xtuml');
INSERT INTO S_SPARM
	VALUES ("36319cba-4224-4f29-ab04-3a8b3ee913a7",
	"03e1ea6e-74af-412c-b034-76ab7511674f",
	'obj',
	"ac93823e-2644-440b-977c-1f4e8480ec59",
	0,
	'',
	"30ba3ab6-6d9c-4d33-bd48-006d0df3ab1c",
	'');
INSERT INTO PE_PE
	VALUES ("03e1ea6e-74af-412c-b034-76ab7511674f",
	1,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("e28336c9-6302-4998-8d17-048e447f7420",
	"00000000-0000-0000-0000-000000000000",
	'transformBridgeFunction',
	'',
	's_brg = param.s_brg;
fp = param.fp;
comp_def = param.comp_def;

// create function object
create object instance func of Function;
func.name = s_brg.Name;
relate func to fp across R404;
relate func to comp_def across R409;

// create typed object
create object instance typed_object of TypedObject;
select one s_dt related by s_brg->S_DT[R20];
type = UnresolvedType::getInstance( s_dt:s_dt );
relate type to typed_object across R410;
relate func to typed_object across R406;

// create parameters
create object instance po of ParameterizedObject;
relate func to po across R405;
select any s_bparm related by s_brg->S_BPARM[R21];
prev_s_bparm = s_bparm;
// select first parameter
while ( not_empty prev_s_bparm )
  s_bparm = prev_s_bparm;
  select one prev_s_bparm related by s_bparm->S_BPARM[R55.''succeeds''];
end while;
while ( not_empty s_bparm )
  // create parameter
  create object instance parm of Parameter;
  parm.name = s_bparm.Name;
  create object instance parm_typed_object of TypedObject;
  select one parm_dt related by s_bparm->S_DT[R22];
  parm_type = UnresolvedType::getInstance( s_dt:parm_dt );
  relate parm_type to parm_typed_object across R410;
  relate parm to parm_typed_object across R406;
  // link parameter
  relate parm to po across R424;
  select one first_parm related by po->Parameter[R407];
  if ( empty first_parm )
    relate parm to po across R407;
  else
    next_parm = first_parm;
    last_parm = first_parm;
    while ( not_empty next_parm ) 
      last_parm = next_parm;
      select one next_parm related by last_parm->Parameter[R408.''precedes''];
    end while;
    relate parm to last_parm across R408.''follows'';
  end if;
  select one s_bparm related by s_bparm->S_BPARM[R55.''precedes''];
end while;',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("fe3cbe30-09a0-4862-999e-004a54498465",
	"e28336c9-6302-4998-8d17-048e447f7420",
	's_brg',
	"ecc1ab34-9767-4e8a-82ed-4ab5b2aea2c8",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("ecc1ab34-9767-4e8a-82ed-4ab5b2aea2c8",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Bridge>',
	'',
	'',
	'../../../../../mcooa/models/mcooa/ooaofooa/Domain/Domain.xtuml');
INSERT INTO S_SPARM
	VALUES ("b62f2249-e800-47a0-9ced-547006d67635",
	"e28336c9-6302-4998-8d17-048e447f7420",
	'fp',
	"b4ca8fd2-c6bc-40d6-af72-e591e49acc18",
	0,
	'',
	"fe3cbe30-09a0-4862-999e-004a54498465",
	'');
INSERT INTO S_SPARM
	VALUES ("f7736c14-671c-4551-8d35-2d7ed713cf3d",
	"e28336c9-6302-4998-8d17-048e447f7420",
	'comp_def',
	"1fef1559-c5b6-4eb7-a9c4-8b126b9b51a0",
	0,
	'',
	"b62f2249-e800-47a0-9ced-547006d67635",
	'');
INSERT INTO PE_PE
	VALUES ("e28336c9-6302-4998-8d17-048e447f7420",
	1,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO PE_PE
	VALUES ("06787f13-1c16-4275-879c-00bbeee7cb88",
	1,
	"acef9848-aa6d-428b-9882-cc90deb0a54a",
	"00000000-0000-0000-0000-000000000000",
	7);
INSERT INTO EP_PKG_PROXY
	VALUES ("acef9848-aa6d-428b-9882-cc90deb0a54a",
	"aa743d3c-66dc-49df-a19a-ffbadf9c9d1b",
	"aa743d3c-66dc-49df-a19a-ffbadf9c9d1b",
	'ciera',
	'',
	0,
	'../ciera.xtuml');
INSERT INTO S_SYS_PROXY
	VALUES ("aa743d3c-66dc-49df-a19a-ffbadf9c9d1b",
	'ciera',
	1,
	'../../ciera.xtuml');
