-- BP 7.1.6 content: Package syschar: 3 persistence-version: 7.1.6

INSERT INTO EP_PKG
	VALUES ("06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	"aa743d3c-66dc-49df-a19a-ffbadf9c9d1b",
	'transform',
	'',
	0);
INSERT INTO GD_MD
	VALUES ("a442477a-0195-4034-8986-e4129bb601d0",
	112,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	108,
	0,
	0,
	1,
	1,
	1,
	12,
	1,
	0,
	0,
	200,
	150,
	0,
	'',
	'ciera::ciera::transform');
INSERT INTO DIM_DIA
	VALUES ("a442477a-0195-4034-8986-e4129bb601d0",
	'',
	1.000000,
	0.000000,
	0.000000,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO S_SYNC
	VALUES ("86c4c157-03cd-481b-a5ed-c7c91b1ad36e",
	"00000000-0000-0000-0000-000000000000",
	'transformApplication',
	'',
	'root_package = param.root_package;
select one s_sys related by root_package->S_SYS[R1405];

// create the file
create object instance file of File;
file.path = T::l( s:T::r( s:s_sys.Name ) );
file.name = ::camelCaseName( name:s_sys.Name, start_lower:false ) + ".java";

// create the application object
create object instance app of Application;
app.name = ::camelCaseName( name:s_sys.Name, start_lower:false );
app.num_threads = 1;
relate app to file across R403;

// create the import block
::addStringToImports( file:file, s:"ciera.application.XtumlApplication" );
::addStringToImports( file:file, s:"ciera.components.Component" );

// translate components definitions
select many c_cs related by root_package->PE_PE[R8000]->C_C[R8001];
select any empty_comp_def from instances of ComponentDefinition where false;
for each c_c in c_cs
  ::transformComponentDefinition( c_c:c_c, containing_comp_def:empty_comp_def );
  create object instance comp_inst of ComponentInstance;
  select any comp_def from instances of ComponentDefinition where ( selected.name == ::camelCaseName( name:c_c.Name, start_lower:false ) );
  relate comp_inst to comp_def across R401;
  relate comp_inst to app across R400;
end for;
select many cl_ics related by root_package->PE_PE[R8000]->CL_IC[R8001];
for each cl_ic in cl_ics
  select one c_c related by cl_ic->C_C[R4201];
  select any comp_def from instances of ComponentDefinition where ( selected.name == ::camelCaseName( name:c_c.Name, start_lower:false ) );
  if ( empty comp_def )
    ::transformComponentDefinition( c_c:c_c, containing_comp_def:empty_comp_def );
  end if;
  create object instance comp_inst of ComponentInstance;
  select any comp_def from instances of ComponentDefinition where ( selected.name == ::camelCaseName( name:c_c.Name, start_lower:false ) );
  relate comp_inst to comp_def across R401;
  relate comp_inst to app across R400;
end for;
',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("6b6c262c-3690-4123-b000-38fb9cc04e80",
	"86c4c157-03cd-481b-a5ed-c7c91b1ad36e",
	'root_package',
	"9939c670-a721-4742-a824-ed4b0df4acd6",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("9939c670-a721-4742-a824-ed4b0df4acd6",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Package>',
	'',
	'',
	'../../../../../mcooa/models/mcooa/ooaofooa/Element Packaging/Element Packaging.xtuml');
INSERT INTO PE_PE
	VALUES ("86c4c157-03cd-481b-a5ed-c7c91b1ad36e",
	1,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("a77051bc-22a5-45fc-a0ba-6e4ceeaa7802",
	"00000000-0000-0000-0000-000000000000",
	'transformComponentDefinition',
	'',
	'c_c = param.c_c;
containing_comp_def = param.containing_comp_def;

// create the file
create object instance file of File;
file.path = ::c_cToPath( c_c:c_c );
file.name = ::camelCaseName( name:c_c.Name, start_lower:false ) + ".java";

// create the component definition object
create object instance comp_def of ComponentDefinition;
comp_def.name = ::camelCaseName( name:c_c.Name, start_lower:false );
comp_def.fully_qualified_name = ::pathToPackage( path:file.path ) + "." + comp_def.name;
comp_def.init_block_throws_exception = false;
relate comp_def to file across R403;

// transform inner packages
select many ep_pkgs related by c_c->PE_PE[R8003]->EP_PKG[R8001];
for each ep_pkg in ep_pkgs
  ::transformPackage( ep_pkg:ep_pkg, containing_comp_def:comp_def );
end for;

// transform innter components
select many inner_c_cs related by c_c->PE_PE[R8003]->C_C[R8001];
for each inner_c_c in inner_c_cs
  ::transformComponentDefinition( c_c:inner_c_c, containing_comp_def:comp_def );
end for;

// create import block
::addStringToImports( file:file, s:"ciera.components.Component" );
::addStringToImports( file:file, s:"ciera.classes.Where" );
select many object_files related by comp_def->Class[R414]->File[R403];
for each object_file in object_files
  ::addFileToImports( file:file, file_to_import:object_file );
  select one objectset_file related by object_file->Class[R403]->ClassSet[R411]->File[R403];
  ::addFileToImports( file:file, file_to_import:objectset_file );
end for;',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("9e250ca1-996f-471c-9f10-bb5ad2591f03",
	"a77051bc-22a5-45fc-a0ba-6e4ceeaa7802",
	'c_c',
	"67f93d18-1045-4c6c-b0d5-a692023c471c",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("67f93d18-1045-4c6c-b0d5-a692023c471c",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Component>',
	'',
	'',
	'../../../../../mcooa/models/mcooa/ooaofooa/Component/Component.xtuml');
INSERT INTO S_SPARM
	VALUES ("35145c47-5490-4738-a0b2-7e513f9ed71c",
	"a77051bc-22a5-45fc-a0ba-6e4ceeaa7802",
	'containing_comp_def',
	"1fef1559-c5b6-4eb7-a9c4-8b126b9b51a0",
	0,
	'',
	"9e250ca1-996f-471c-9f10-bb5ad2591f03",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("1fef1559-c5b6-4eb7-a9c4-8b126b9b51a0",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Component Definition>',
	'',
	'',
	'../architecture/architecture.xtuml');
INSERT INTO PE_PE
	VALUES ("a77051bc-22a5-45fc-a0ba-6e4ceeaa7802",
	1,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("1c26da85-1e78-4183-88ca-60811dc084db",
	"00000000-0000-0000-0000-000000000000",
	'transformPackage',
	'',
	'ep_pkg = param.ep_pkg;
containing_comp_def = param.containing_comp_def;
select many pe_pes related by ep_pkg->PE_PE[R8000];

// transform functions
select many s_syncs related by pe_pes->S_SYNC[R8001];
if ( cardinality s_syncs > 0 )
  // create the file
  create object instance file of File;
  file.path = ::ep_pkgToPath( ep_pkg:ep_pkg );
  file.name = ::camelCaseName( name:ep_pkg.Name, start_lower:false ) + ".java";
  
  // create the import block
  ::addStringToImports( file:file, s:containing_comp_def.fully_qualified_name );
  
  // create the function package object
  create object instance fp of FunctionPackage;
  fp.name = ::camelCaseName( name:ep_pkg.Name, start_lower:false );
  relate fp to file across R403;

  // transform functions
  for each s_sync in s_syncs
    ::transformFunction( s_sync:s_sync, fp:fp, comp_def:containing_comp_def );
  end for;
end if;

// transform packages
select many inner_ep_pkgs related by pe_pes->EP_PKG[R8001];
for each inner_ep_pkg in inner_ep_pkgs
  ::transformPackage( ep_pkg:inner_ep_pkg, containing_comp_def:containing_comp_def );
end for;

// transform constants

// transform interfaces

// transform classes
select many o_objs related by pe_pes->O_OBJ[R8001];
for each o_obj in o_objs
  ::transformClass( o_obj:o_obj, containing_comp_def:containing_comp_def );
end for;

// transform datatypes

// transform components
select many c_cs related by pe_pes->C_C[R8001];
for each c_c in c_cs
  ::transformComponentDefinition( c_c:c_c, containing_comp_def:containing_comp_def );
end for;

// transform EEs',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("e05335a1-ada2-43dd-bdb1-f29837aff1fc",
	"1c26da85-1e78-4183-88ca-60811dc084db",
	'ep_pkg',
	"9939c670-a721-4742-a824-ed4b0df4acd6",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_SPARM
	VALUES ("0ca0ea7b-7e27-4164-8c8f-51956eba948a",
	"1c26da85-1e78-4183-88ca-60811dc084db",
	'containing_comp_def',
	"1fef1559-c5b6-4eb7-a9c4-8b126b9b51a0",
	0,
	'',
	"e05335a1-ada2-43dd-bdb1-f29837aff1fc",
	'');
INSERT INTO PE_PE
	VALUES ("1c26da85-1e78-4183-88ca-60811dc084db",
	1,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("4372e9ec-b226-4bdc-9219-9427ca71b423",
	"00000000-0000-0000-0000-000000000000",
	'transformFunction',
	'',
	's_sync = param.s_sync;
fp = param.fp;
comp_def = param.comp_def;

// create function object
create object instance func of Function;
func.name = s_sync.Name;
relate func to fp across R404;
relate func to comp_def across R409;

// create typed object
create object instance typed_object of TypedObject;
select one s_dt related by s_sync->S_DT[R25];
type = UnresolvedType::getInstance( s_dt:s_dt );
relate type to typed_object across R410;
relate func to typed_object across R406;

// create parameters
create object instance po of ParameterizedObject;
relate func to po across R405;
select any s_sparm related by s_sync->S_SPARM[R24];
prev_s_sparm = s_sparm;
// select first parameter
while ( not_empty prev_s_sparm )
  s_sparm = prev_s_sparm;
  select one prev_s_sparm related by s_sparm->S_SPARM[R54.''succeeds''];
end while;
while ( not_empty s_sparm )
  // create parameter
  create object instance parm of Parameter;
  parm.name = s_sparm.Name;
  create object instance parm_typed_object of TypedObject;
  select one parm_dt related by s_sparm->S_DT[R26];
  parm_type = UnresolvedType::getInstance( s_dt:parm_dt );
  relate parm_type to parm_typed_object across R410;
  relate parm to parm_typed_object across R406;
  // link parameter
  select one first_parm related by po->Parameter[R407];
  if ( empty first_parm )
    relate parm to po across R407;
  else
    next_parm = first_parm;
    last_parm = first_parm;
    while ( not_empty next_parm ) 
      next_parm = last_parm;
      select one next_parm related by last_parm->Parameter[R408.''precedes''];
    end while;
    relate parm to last_parm across R408.''follows'';
  end if;
  select one s_sparm related by s_sparm->S_SPARM[R54.''precedes''];
end while;',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("20dcc580-c900-4c37-9db9-c96b57ce0c7a",
	"4372e9ec-b226-4bdc-9219-9427ca71b423",
	's_sync',
	"60690409-5a69-45db-896b-5a63a9103c18",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("60690409-5a69-45db-896b-5a63a9103c18",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Function>',
	'',
	'',
	'../../../../../mcooa/models/mcooa/ooaofooa/Domain/Domain.xtuml');
INSERT INTO S_SPARM
	VALUES ("726fb276-09fd-4ea5-a7a4-9f4dc0815b4a",
	"4372e9ec-b226-4bdc-9219-9427ca71b423",
	'fp',
	"b4ca8fd2-c6bc-40d6-af72-e591e49acc18",
	0,
	'',
	"20dcc580-c900-4c37-9db9-c96b57ce0c7a",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("b4ca8fd2-c6bc-40d6-af72-e591e49acc18",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Function Package>',
	'',
	'',
	'../architecture/architecture.xtuml');
INSERT INTO S_SPARM
	VALUES ("30cff3bd-5277-4221-8d57-b94d725a461b",
	"4372e9ec-b226-4bdc-9219-9427ca71b423",
	'comp_def',
	"1fef1559-c5b6-4eb7-a9c4-8b126b9b51a0",
	0,
	'',
	"726fb276-09fd-4ea5-a7a4-9f4dc0815b4a",
	'');
INSERT INTO PE_PE
	VALUES ("4372e9ec-b226-4bdc-9219-9427ca71b423",
	1,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("26bcd5a8-82fd-48ba-8dfc-40a65ebfd881",
	"00000000-0000-0000-0000-000000000000",
	'transformBuiltinTypes',
	'',
	'select many s_dts from instances of S_DT;
for each s_dt in s_dts

  if ( ::s_dtIsBuiltin( s_dt:s_dt ) )

    type_name = "";
    type_import = "";
    if ( "boolean" == s_dt.Name )
      type_name = "boolean";
      type_import = "";
    elif ( "component_ref" == s_dt.Name )
      type_name = "Component";
      type_import = "ciera.components.Component";
    elif ( "date" == s_dt.Name )
      type_name = "Date";
      type_import = "ciera.util.Date";
    elif ( "inst<Event>" == s_dt.Name )
      type_name = "Event";
      type_import = "ciera.statemachine.Event";
    elif ( "inst_ref<Timer>" == s_dt.Name )
      type_name = "Timer";
      type_import = "ciera.util.Timer";
    elif ( "integer" == s_dt.Name )
      type_name = "int";
      type_import = "";
    elif ( "real" == s_dt.Name )
      type_name = "float";
      type_import = "";
    elif ( "string" == s_dt.Name )
      type_name = "String";
      type_import = "";
    elif ( "timestamp" == s_dt.Name )
      type_name = "TimeStamp";
      type_import = "ciera.util.TimeStamp";
    elif ( "unique_id" == s_dt.Name )
      type_name = "UUID";
      type_import = "java.util.UUID";
    elif ( "void" == s_dt.Name )
      type_name = "void";
      type_import = "";
    elif ( "inst_ref_set<Object>" == s_dt.Name )
      type_name = "InstanceSet";
      type_import = "ciera.classes.InstanceSet";
    elif ( "inst_ref<Object>" == s_dt.Name )
      type_name = "ModelInstance";
      type_import = "ciera.classes.ModelInstance";
    end if;

    if ( "" != type_name )
      create object instance builtin of BuiltInType;
      builtin.name = type_name;
      builtin.import = type_import;
      create object instance type of Type;
      relate builtin to type across R412;
      relate builtin to s_dt across R413;
    end if;
  
  end if;

end for;',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO PE_PE
	VALUES ("26bcd5a8-82fd-48ba-8dfc-40a65ebfd881",
	1,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("5d5d0e20-88ef-45c3-9564-38aff4db30b8",
	"00000000-0000-0000-0000-000000000000",
	'transformClass',
	'',
	'o_obj = param.o_obj;
containing_comp_def = param.containing_comp_def;
select one ep_pkg related by o_obj->PE_PE[R8001]->EP_PKG[R8000];

// create the object file
create object instance file of File;
file.path = ::ep_pkgToPath( ep_pkg:ep_pkg );
file.name = ::camelCaseName( name:o_obj.Name, start_lower:false ) + ".java";

// create the object
create object instance obj of Class;
obj.name = ::camelCaseName( name:o_obj.Name, start_lower:false );
obj.key_letters = o_obj.Key_Lett;
obj.number = o_obj.Numb;
relate obj to file across R403;
relate obj to containing_comp_def across R414;

// create the instance type
create object instance type of Type;
relate type to obj across R412;

// relate to the OOA class
relate obj to o_obj across R415;

// transform attributes
select many o_attrs related by o_obj->O_ATTR[R102];
for each o_attr in o_attrs
  if ( "current_state" != o_attr.Name )
    ::transformAttribute( o_attr:o_attr, obj:obj );
  end if;
end for;

// transform relationships
select many r_rels related by o_obj->R_REL[R201];
for each r_rel in r_rels
  ::transformAssociatedClassReference( r_rel:r_rel, obj:obj );
end for;

// transform the set object
::transformClassSet( obj:obj, ep_pkg:ep_pkg );

// create the import block
::addStringToImports( file:file, s:"ciera.classes.EmptyInstance" );
::addStringToImports( file:file, s:"ciera.classes.ModelInstance" );',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("aa6be7c4-dd4e-4044-bbf1-81678db4c1f5",
	"5d5d0e20-88ef-45c3-9564-38aff4db30b8",
	'o_obj',
	"63f4ff99-f127-443b-a678-30ace41da702",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("63f4ff99-f127-443b-a678-30ace41da702",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Model Class>',
	'',
	'',
	'../../../../../mcooa/models/mcooa/ooaofooa/Subsystem/Subsystem.xtuml');
INSERT INTO S_SPARM
	VALUES ("9e76c7fd-92f6-44e6-92b5-aa4874148abc",
	"5d5d0e20-88ef-45c3-9564-38aff4db30b8",
	'containing_comp_def',
	"1fef1559-c5b6-4eb7-a9c4-8b126b9b51a0",
	0,
	'',
	"aa6be7c4-dd4e-4044-bbf1-81678db4c1f5",
	'');
INSERT INTO PE_PE
	VALUES ("5d5d0e20-88ef-45c3-9564-38aff4db30b8",
	1,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("a14540ae-c3dd-4248-890f-99953be47efa",
	"00000000-0000-0000-0000-000000000000",
	'transformClassSet',
	'',
	'obj = param.obj;
ep_pkg = param.ep_pkg;

// create the class set object
create object instance objset of ClassSet;
relate objset to obj across R411;

// create the object file
create object instance file of File;
file.path = ::ep_pkgToPath( ep_pkg:ep_pkg );
file.name = objset.name + ".java";

relate objset to file across R403;

// create the instance type
create object instance type of Type;
relate type to objset across R412;

// create the import block
::addStringToImports( file:file, s:"ciera.classes.EmptyInstanceSet" );
::addStringToImports( file:file, s:"ciera.classes.InstanceSet" );
::addStringToImports( file:file, s:"ciera.classes.Where" );',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("ceb8a015-73b2-4bc0-acbc-a5fa93f21e67",
	"a14540ae-c3dd-4248-890f-99953be47efa",
	'obj',
	"ac93823e-2644-440b-977c-1f4e8480ec59",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("ac93823e-2644-440b-977c-1f4e8480ec59",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Class>',
	'',
	'',
	'../architecture/architecture.xtuml');
INSERT INTO S_SPARM
	VALUES ("72a8d944-1499-487e-9f40-06dbfc501f96",
	"a14540ae-c3dd-4248-890f-99953be47efa",
	'ep_pkg',
	"9939c670-a721-4742-a824-ed4b0df4acd6",
	0,
	'',
	"ceb8a015-73b2-4bc0-acbc-a5fa93f21e67",
	'');
INSERT INTO PE_PE
	VALUES ("a14540ae-c3dd-4248-890f-99953be47efa",
	1,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("ba8e6cdd-5bb7-4a8b-9ff5-8f0d96755d95",
	"00000000-0000-0000-0000-000000000000",
	'resolveTypes',
	'',
	'select many unresolved_types from instances of UnresolvedType;
for each unresolved_type in unresolved_types
  select one type related by unresolved_type->Type[R412];
  select one s_dt related by unresolved_type->S_DT[R419];

  // resolve builtin types
  if ( ::s_dtIsBuiltin( s_dt:s_dt ) )
    select one builtin related by s_dt->BuiltInType[R413];
    if ( not_empty builtin )
      unresolved_type.dispose();
      relate builtin to type across R412;
    end if;
  else
  
  // resolve class reference types
  select one s_irdt related by s_dt->S_IRDT[R17];
  if ( not_empty s_irdt )
    select one o_obj related by s_irdt->O_OBJ[R123];
    if ( s_irdt.isSet )
      // class sets
      select one objset related by o_obj->Class[R415]->ClassSet[R411];
      if ( not_empty objset )
        unresolved_type.dispose();
        relate objset to type across R412;
      end if;
    else
      // classes
      select one obj related by o_obj->Class[R415];
      if ( not_empty obj )
        unresolved_type.dispose();
        relate obj to type across R412;
      end if;
    end if;
  end if;
  end if;

end for;',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO PE_PE
	VALUES ("ba8e6cdd-5bb7-4a8b-9ff5-8f0d96755d95",
	1,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("19215085-ca84-43cb-bb81-6ffd50262136",
	"00000000-0000-0000-0000-000000000000",
	'transformAttribute',
	'',
	'o_attr = param.o_attr;
obj = param.obj;

// create the attribute
create object instance attr of Attribute;
attr.base_name = o_attr.Name;
relate attr to obj across R416;

// set the type
select one s_dt related by o_attr->S_DT[R114];
type = UnresolvedType::getInstance( s_dt:s_dt );
create object instance typed_object of TypedObject;
relate type to typed_object across R410;
relate typed_object to attr across R406;

// linke OOA attribute
relate o_attr to attr across R421;',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("7b1297b8-b278-4ae8-a571-70b7bf262f38",
	"19215085-ca84-43cb-bb81-6ffd50262136",
	'o_attr',
	"579b8247-e153-481d-8926-384cdc722464",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("579b8247-e153-481d-8926-384cdc722464",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Attribute>',
	'',
	'',
	'../../../../../mcooa/models/mcooa/ooaofooa/Subsystem/Subsystem.xtuml');
INSERT INTO S_SPARM
	VALUES ("7a7146b3-82c0-458a-bf9d-b99938b7d7c7",
	"19215085-ca84-43cb-bb81-6ffd50262136",
	'obj',
	"ac93823e-2644-440b-977c-1f4e8480ec59",
	0,
	'',
	"7b1297b8-b278-4ae8-a571-70b7bf262f38",
	'');
INSERT INTO PE_PE
	VALUES ("19215085-ca84-43cb-bb81-6ffd50262136",
	1,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("63607f84-9ce1-4bf7-a444-ed2916332276",
	"00000000-0000-0000-0000-000000000000",
	'transformAssociatedClassReference',
	'',
	'r_rel = param.r_rel;
obj = param.obj;
select one o_obj related by obj->O_OBJ[R415];
select many r_oirs related by r_rel->R_OIR[R201] where ( selected.Obj_ID == o_obj.Obj_ID );
for each r_oir in r_oirs

  // create the ACR instance
  create object instance acr of AssociatedClassReference;
  acr.rel_numb = r_rel.Numb;
  relate acr to obj across R417;
  
  select any other_irdt from instances of S_IRDT where false;
  
  // create subtype
  select one r_sub related by r_oir->R_RGO[R203]->R_SUB[R205];
  select one r_super related by r_oir->R_RTO[R203]->R_SUPER[R204];
  select one r_aone related by r_oir->R_RTO[R203]->R_AONE[R204];
  select one r_aoth related by r_oir->R_RTO[R203]->R_AOTH[R204];
  select one r_assr related by r_oir->R_RGO[R203]->R_ASSR[R205];
  select one r_part related by r_oir->R_RTO[R203]->R_PART[R204];
  select one r_form related by r_oir->R_RGO[R203]->R_FORM[R205];
  if ( not_empty r_sub )
    create object instance super of SupertypeReference;
    relate super to acr across R420;
    select any other_irdt related by r_sub->R_SUBSUP[R213]->R_SUPER[R212]->R_RTO[R204]->R_OIR[R203]->O_OBJ[R201]->S_IRDT[R123] where ( not selected.isSet );
  elif ( not_empty r_super )
    create object instance sub of SubtypeReference;
    relate sub to acr across R420;
    select any other_irdt related by r_super->R_SUBSUP[R212]->R_SUB[R213]->R_RGO[R205]->R_OIR[R203]->O_OBJ[R201]->S_IRDT[R123] where ( selected.isSet );
  else
    create object instance basic of BasicReference;
    if ( not_empty r_aone or not_empty r_aoth )
      basic.assoc = true;
      basic.formalizer = false;
      select one assr related by r_aone->R_ASSOC[R209]->R_ASSR[R211];
      if ( empty assr )
        select one assr related by r_aoth->R_ASSOC[R210]->R_ASSR[R211];
      end if;
      if ( 0 == assr.Mult )
        select any other_irdt related by assr->R_RGO[R205]->R_OIR[R203]->O_OBJ[R201]->S_IRDT[R123] where ( not selected.isSet );
      else
        select any other_irdt related by assr->R_RGO[R205]->R_OIR[R203]->O_OBJ[R201]->S_IRDT[R123] where ( selected.isSet );
      end if;
    elif ( not_empty r_assr )
      // associative links need another ACR instance for the one
      // this bit of code does everything (creates/populates ACR, links attributes, links data type)
      // for the one
      create object instance one_acr of AssociatedClassReference;
      one_acr.rel_numb = r_rel.Numb;
      relate one_acr to obj across R417;
      create object instance one_basic of BasicReference;
      one_basic.assoc = true;
      one_basic.formalizer = true;
      select any one_irdt from instances of S_IRDT where false;
      select one aone related by r_assr->R_ASSOC[R211]->R_AONE[R209];
      if ( 0 == aone.Mult )
        select any other_irdt related by aone->R_RTO[R204]->R_OIR[R203]->O_OBJ[R201]->S_IRDT[R123] where ( not selected.isSet );
      else
        select any other_irdt related by aone->R_RTO[R204]->R_OIR[R203]->O_OBJ[R201]->S_IRDT[R123] where ( selected.isSet );
      end if;
      select many ref_attrs related by r_oir->R_RGO[R203]->O_REF[R111]->O_RATTR[R108]->O_ATTR[R106]->Attribute[R421];
      for each ref_attr in ref_attrs
        relate one_acr to ref_attr across R418;
      end for;
      create object instance typed_object of TypedObject;
      select one s_dt related by one_irdt->S_DT[R17];
      type = UnresolvedType::getInstance( s_dt:s_dt );
      relate type to typed_object across R410;
      relate one_acr to typed_object across R406;
      // the main ACR instance is for the other
      basic.assoc = true;
      basic.formalizer = true;
      select one aoth related by r_assr->R_ASSOC[R211]->R_AOTH[R210];
      if ( 0 == aoth.Mult )
        select any other_irdt related by aoth->R_RTO[R204]->R_OIR[R203]->O_OBJ[R201]->S_IRDT[R123] where ( not selected.isSet );
      else
        select any other_irdt related by aoth->R_RTO[R204]->R_OIR[R203]->O_OBJ[R201]->S_IRDT[R123] where ( selected.isSet );
      end if;
    elif ( not_empty r_part )
      basic.assoc = false;
      basic.formalizer = false;
      select any part related by r_part->R_SIMP[R207]->R_PART[R207] where ( selected.OIR_ID != r_part.OIR_ID );
      if ( not_empty part )
        if ( 0 == part.Mult )
          select any other_irdt related by part->R_RTO[R204]->R_OIR[R203]->O_OBJ[R201]->S_IRDT[R123] where ( not selected.isSet );
        else
          select any other_irdt related by part->R_RTO[R204]->R_OIR[R203]->O_OBJ[R201]->S_IRDT[R123] where ( selected.isSet );
        end if;
      else
        select one form related by r_part->R_SIMP[R207]->R_FORM[R208];
        if ( 0 == form.Mult )
          select any other_irdt related by form->R_RGO[R205]->R_OIR[R203]->O_OBJ[R201]->S_IRDT[R123] where ( not selected.isSet );
        else
          select any other_irdt related by form->R_RGO[R205]->R_OIR[R203]->O_OBJ[R201]->S_IRDT[R123] where ( selected.isSet );
        end if;
      end if;
    elif ( not_empty r_form )
      basic.assoc = false;
      basic.formalizer = true;
      select any part related by r_form->R_SIMP[R208]->R_PART[R207];
      if ( 0 == part.Mult )
        select any other_irdt related by part->R_RTO[R204]->R_OIR[R203]->O_OBJ[R201]->S_IRDT[R123] where ( not selected.isSet );
      else
        select any other_irdt related by part->R_RTO[R204]->R_OIR[R203]->O_OBJ[R201]->S_IRDT[R123] where ( selected.isSet );
      end if;
    end if;
    relate basic to acr across R420;
  end if;
  
  // relate to referential attributes
  select many ref_attrs related by r_oir->R_RGO[R203]->O_REF[R111]->O_RATTR[R108]->O_ATTR[R106]->Attribute[R421];
  for each ref_attr in ref_attrs
    relate acr to ref_attr across R418;
  end for;
  
  // create and link datatype
  create object instance typed_object of TypedObject;
  select one s_dt related by other_irdt->S_DT[R17];
  type = UnresolvedType::getInstance( s_dt:s_dt );
  relate type to typed_object across R410;
  relate acr to typed_object across R406;

end for;',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("cd5b29d6-0d5a-46c2-861a-3930bec96a31",
	"63607f84-9ce1-4bf7-a444-ed2916332276",
	'r_rel',
	"4480b008-8c74-4f57-9256-08b7365520bc",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("4480b008-8c74-4f57-9256-08b7365520bc",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Association>',
	'',
	'',
	'../../../../../mcooa/models/mcooa/ooaofooa/Association/Association.xtuml');
INSERT INTO S_SPARM
	VALUES ("a8dfe77c-2fde-48ad-bb6a-38bfa1d2eadd",
	"63607f84-9ce1-4bf7-a444-ed2916332276",
	'obj',
	"ac93823e-2644-440b-977c-1f4e8480ec59",
	0,
	'',
	"cd5b29d6-0d5a-46c2-861a-3930bec96a31",
	'');
INSERT INTO PE_PE
	VALUES ("63607f84-9ce1-4bf7-a444-ed2916332276",
	1,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("a566ca37-5a57-4f7f-9212-c9cf475d697d",
	"00000000-0000-0000-0000-000000000000",
	'transformInstanceReferenceTypes',
	'',
	'// make sure an instance reference type is created for every class
select many o_objs from instances of O_OBJ;
for each o_obj in o_objs
  select one packageableElem related by o_obj->PE_PE[R8001];
  select one package related by packageableElem->EP_PKG[R8000];
  select one component related by packageableElem->C_C[R8003];

  // Make sure the IRDTs don''t already exist before creating new ones.  Check
  // the single and set version and create whatever does not exist.
  select any existing_irdt related by o_obj->S_IRDT[R123] where selected.isSet == false;
  if (empty existing_irdt) 
    create object instance pe of PE_PE;
    relate pe to package across R8000;
    pe.Visibility = Visibility::Public;
    pe.type = ElementTypeConstants::DATATYPE;
    create object instance dt of S_DT;
    relate pe to dt across R8001;
    create object instance irdt of S_IRDT;
    irdt.isSet = false;
    relate dt to irdt across R17;
    dt.Name = "inst_ref<" + o_obj.Name + ">" ;
    relate o_obj to irdt across R123;
  end if;

  select any existing_irdt_set related by o_obj->S_IRDT[R123] where selected.isSet == true;
  if (empty existing_irdt_set) 
    create object instance pe of PE_PE;
    relate pe to package across R8000;
    pe.Visibility = Visibility::Public;
    pe.type = ElementTypeConstants::DATATYPE;
    create object instance dt2 of S_DT;
    relate pe to dt2 across R8001;
    create object instance irsdt of S_IRDT;
    irsdt.isSet = true;
    relate irsdt to dt2 across R17;
    dt2.Name = "inst_ref_set<" + o_obj.Name + ">" ;
    relate o_obj to irsdt across R123;
  end if;
end for;',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO PE_PE
	VALUES ("a566ca37-5a57-4f7f-9212-c9cf475d697d",
	1,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("026a2c03-fa7a-4eac-ada9-60382ab3b543",
	"00000000-0000-0000-0000-000000000000",
	'pseudoFormalize',
	'',
	'// for simple relationships with two participants, one must
// be considered the formalizer
select many r_simps from instances of R_SIMP;
select many r_rels related by r_simps->R_REL[R206];
for each r_rel in r_rels

  select many refs from instances of AssociatedClassReference where ( selected.rel_numb == r_rel.Numb );
  select many basic_refs related by refs->BasicReference[R420] where ( not selected.assoc );
  // these must come in pairs
  if ( 2 == cardinality basic_refs )
    select any obj1 from instances of Class where false;
    select any obj2 from instances of Class where false;
    select any basic1 from instances of BasicReference where false;
    select any basic2 from instances of BasicReference where false;
    for each basic_ref in basic_refs
      if ( empty obj1 )
        select one obj1 related by basic_ref->AssociatedClassReference[R420]->Class[R417];
        basic1 = basic_ref;
      else
        select one obj2 related by basic_ref->AssociatedClassReference[R420]->Class[R417];
        basic2 = basic_ref;
      end if;
    end for;
    // the participant with the lower class name alphanumerically will be the formalizer
    if ( 0 > STRING::compare( s1:obj1.name, s2:obj2.name ) )
      basic1.formalizer = true;
    else
      basic2.formalizer = true;
    end if;
  else
    // TODO bad
    TRACE::log( flavor:"failure", id:88, message:"Simple relationship does not have two references" );
  end if;

end for;',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO PE_PE
	VALUES ("026a2c03-fa7a-4eac-ada9-60382ab3b543",
	1,
	"06787f13-1c16-4275-879c-00bbeee7cb88",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO PE_PE
	VALUES ("06787f13-1c16-4275-879c-00bbeee7cb88",
	1,
	"acef9848-aa6d-428b-9882-cc90deb0a54a",
	"00000000-0000-0000-0000-000000000000",
	7);
INSERT INTO EP_PKG_PROXY
	VALUES ("acef9848-aa6d-428b-9882-cc90deb0a54a",
	"aa743d3c-66dc-49df-a19a-ffbadf9c9d1b",
	"aa743d3c-66dc-49df-a19a-ffbadf9c9d1b",
	'ciera',
	'',
	0,
	'../ciera.xtuml');
INSERT INTO S_SYS_PROXY
	VALUES ("aa743d3c-66dc-49df-a19a-ffbadf9c9d1b",
	'ciera',
	1,
	'../../ciera.xtuml');
