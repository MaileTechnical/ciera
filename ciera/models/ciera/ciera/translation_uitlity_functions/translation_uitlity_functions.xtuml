-- BP 7.1.6 content: Package syschar: 3 persistence-version: 7.1.6

INSERT INTO EP_PKG
	VALUES ("65dec46c-ec8b-4464-b227-a7853cadd3b4",
	"00000000-0000-0000-0000-000000000000",
	"aa743d3c-66dc-49df-a19a-ffbadf9c9d1b",
	'translation_uitlity_functions',
	'',
	0);
INSERT INTO GD_MD
	VALUES ("0b315d0b-7aca-433b-a22a-aae11b22d120",
	112,
	"65dec46c-ec8b-4464-b227-a7853cadd3b4",
	108,
	0,
	0,
	1,
	1,
	1,
	12,
	1,
	0,
	0,
	0,
	0,
	0,
	'',
	'ciera::ciera::translation_uitlity_functions');
INSERT INTO DIM_DIA
	VALUES ("0b315d0b-7aca-433b-a22a-aae11b22d120",
	'',
	1.000000,
	0.000000,
	0.000000,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO S_SYNC
	VALUES ("c88d4df1-267c-4c7b-9093-c5cef65e913f",
	"00000000-0000-0000-0000-000000000000",
	'camelCaseName',
	'',
	'name = param.name;
underscore_index = STR::indexof( haystack:name, needle:"_" );
while ( -1 != underscore_index )
  left = STR::substr( s:name, begin:0, end:underscore_index );
  right = STR::substr( s:name, begin:underscore_index + 1, end:-1 );
  name = left + " " + right;
  underscore_index = STR::indexof( haystack:name, needle:"_" );
end while;
return T::r( s:T::c( s:name ) );
// TODO make sure already camel cased does not get destroyed',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("7983a102-40c5-4c6f-9a0a-26e987abb364",
	"c88d4df1-267c-4c7b-9093-c5cef65e913f",
	'name',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_SPARM
	VALUES ("47f5a9c8-73d1-4edf-86a1-d0688f882b98",
	"c88d4df1-267c-4c7b-9093-c5cef65e913f",
	'start_lower',
	"ba5eda7a-def5-0000-0000-000000000001",
	0,
	'',
	"7983a102-40c5-4c6f-9a0a-26e987abb364",
	'');
INSERT INTO PE_PE
	VALUES ("c88d4df1-267c-4c7b-9093-c5cef65e913f",
	1,
	"65dec46c-ec8b-4464-b227-a7853cadd3b4",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("ebdd1f8c-ecaa-4cce-b0ad-d5f692094def",
	"00000000-0000-0000-0000-000000000000",
	'pathToPackage',
	'',
	's = param.path;
slash_index = STR::indexof( haystack:s, needle:"/" );
while ( -1 != slash_index )
  left = STR::substr( s:s, begin:0, end:slash_index );
  right = STR::substr( s:s, begin:slash_index + 1, end:-1 );
  s = left + "." + right;
  slash_index = STR::indexof( haystack:s, needle:"/" );
end while;
return s;',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("eab2164e-974f-4448-9552-2c45c05b0023",
	"ebdd1f8c-ecaa-4cce-b0ad-d5f692094def",
	'path',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO PE_PE
	VALUES ("ebdd1f8c-ecaa-4cce-b0ad-d5f692094def",
	1,
	"65dec46c-ec8b-4464-b227-a7853cadd3b4",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("b97081ab-e134-4d0c-a001-bc82f0f27b1b",
	"00000000-0000-0000-0000-000000000000",
	'ep_pkgToPath',
	'',
	'ep_pkg = param.ep_pkg;
path = T::l( s:T::r( s:ep_pkg.Name ) );
select one containing_ep_pkg related by ep_pkg->PE_PE[R8001]->EP_PKG[R8000];
if ( not_empty containing_ep_pkg )
  path = ::ep_pkgToPath( ep_pkg:containing_ep_pkg ) + "/" + path;
else
  select one containing_c_c related by ep_pkg->PE_PE[R8001]->C_C[R8003];
  if ( not_empty containing_c_c )
    path = ::c_cToPath( c_c:containing_c_c ) + "/" + path;
  end if;
end if;
return path;',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("16af8234-8c24-4d27-9748-0578664eaf22",
	"b97081ab-e134-4d0c-a001-bc82f0f27b1b",
	'ep_pkg',
	"9939c670-a721-4742-a824-ed4b0df4acd6",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("9939c670-a721-4742-a824-ed4b0df4acd6",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Package>',
	'',
	'',
	'../../../../../mcooa/models/mcooa/ooaofooa/Element Packaging/Element Packaging.xtuml');
INSERT INTO PE_PE
	VALUES ("b97081ab-e134-4d0c-a001-bc82f0f27b1b",
	1,
	"65dec46c-ec8b-4464-b227-a7853cadd3b4",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("f9c7c4dc-038d-469d-b851-a0969d642c72",
	"00000000-0000-0000-0000-000000000000",
	'c_cToPath',
	'',
	'c_c = param.c_c;
path = T::l( s:T::r( s:c_c.Name ) );
select one containing_ep_pkg related by c_c->PE_PE[R8001]->EP_PKG[R8000];
if ( not_empty containing_ep_pkg )
  path = ::ep_pkgToPath( ep_pkg:containing_ep_pkg ) + "/" + path;
else
  select one containing_c_c related by c_c->PE_PE[R8001]->C_C[R8003];
  if ( not_empty containing_c_c )
    path = ::c_cToPath( c_c:containing_c_c ) + "/" + path;
  end if;
end if;
return path;',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("97608e01-2875-46c2-8653-ea6c96bb290b",
	"f9c7c4dc-038d-469d-b851-a0969d642c72",
	'c_c',
	"67f93d18-1045-4c6c-b0d5-a692023c471c",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("67f93d18-1045-4c6c-b0d5-a692023c471c",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Component>',
	'',
	'',
	'../../../../../mcooa/models/mcooa/ooaofooa/Component/Component.xtuml');
INSERT INTO PE_PE
	VALUES ("f9c7c4dc-038d-469d-b851-a0969d642c72",
	1,
	"65dec46c-ec8b-4464-b227-a7853cadd3b4",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("e18e31ef-e956-4153-8354-5250b33e7730",
	"00000000-0000-0000-0000-000000000000",
	'addFileToImports',
	'',
	'file_to_import = param.file_to_import;
import_string = ::pathToPackage( path:file_to_import.path ) + "." + file_to_import.name;
::addStringToImports( file:param.file, s:import_string );',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("fd1df211-d405-4f1a-8dbf-65a65495196f",
	"e18e31ef-e956-4153-8354-5250b33e7730",
	'file',
	"7f1815c6-b9da-4371-acbc-8297d9eaecf4",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("7f1815c6-b9da-4371-acbc-8297d9eaecf4",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<File>',
	'',
	'',
	'../architecture/file/file.xtuml');
INSERT INTO S_SPARM
	VALUES ("495ce90f-14d7-46b1-8d7e-3b8fb4945e1d",
	"e18e31ef-e956-4153-8354-5250b33e7730",
	'file_to_import',
	"7f1815c6-b9da-4371-acbc-8297d9eaecf4",
	0,
	'',
	"fd1df211-d405-4f1a-8dbf-65a65495196f",
	'');
INSERT INTO PE_PE
	VALUES ("e18e31ef-e956-4153-8354-5250b33e7730",
	1,
	"65dec46c-ec8b-4464-b227-a7853cadd3b4",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("a77c0fdf-2f56-4567-a215-618936c9a71f",
	"00000000-0000-0000-0000-000000000000",
	'addStringToImports',
	'',
	'file = param.file;
if ( "" != param.s )
  select any import related by file->TypeImport[R402] where ( selected.fully_qualified_name == param.s );
  if ( empty import )
    import = TypeImport::get_import( import:param.s );
    create object instance import_ref of TypeImportReference;
    relate import to file across R402 using import_ref;
  end if;
end if;',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("52a302f9-dfbe-4629-bffa-79123a18e28c",
	"a77c0fdf-2f56-4567-a215-618936c9a71f",
	'file',
	"7f1815c6-b9da-4371-acbc-8297d9eaecf4",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_SPARM
	VALUES ("31f4cf0b-4a12-4f81-8bfb-e411a84df951",
	"a77c0fdf-2f56-4567-a215-618936c9a71f",
	's',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"52a302f9-dfbe-4629-bffa-79123a18e28c",
	'');
INSERT INTO PE_PE
	VALUES ("a77c0fdf-2f56-4567-a215-618936c9a71f",
	1,
	"65dec46c-ec8b-4464-b227-a7853cadd3b4",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("4e285295-4ea7-482a-8d47-1fea832b5b27",
	"00000000-0000-0000-0000-000000000000",
	's_dtIsBuiltin',
	'',
	's_dt = param.s_dt;
// builtin types have not containing package or component
select one c_c related by s_dt->PE_PE[R8001]->C_C[R8003];
select one ep_pkg related by s_dt->PE_PE[R8001]->EP_PKG[R8000];
return ( empty c_c and empty ep_pkg );',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("6ab42c37-5f74-4f41-ba5d-9e3c832a95e5",
	"4e285295-4ea7-482a-8d47-1fea832b5b27",
	's_dt',
	"4a90cd45-ece0-4e72-afe7-44996f9d7e1e",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("4a90cd45-ece0-4e72-afe7-44996f9d7e1e",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Data Type>',
	'',
	'',
	'../../../../../mcooa/models/mcooa/ooaofooa/Domain/Domain.xtuml');
INSERT INTO PE_PE
	VALUES ("4e285295-4ea7-482a-8d47-1fea832b5b27",
	1,
	"65dec46c-ec8b-4464-b227-a7853cadd3b4",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("41efa205-a6ab-412d-a8c9-a42846dc0ffc",
	"00000000-0000-0000-0000-000000000000",
	'r_rel_is_formal',
	'',
	'r_rel = param.r_rel;
select one simp related by r_rel->R_SIMP[R206];                                                                                                    
if ( not_empty simp )
  select one form related by simp->R_FORM[R208];                                                                                                    
  if ( not_empty form )                                                                                                                                
    return true;
  end if;
else 
  select one assoc related by r_rel->R_ASSOC[R206];                                                                                                   
  if ( not_empty assoc )                                                                                                                             
    select one rto1 related by assoc->R_AONE[R209]->R_RTO[R204];
    select any rtida1 related by rto1->O_RTIDA[R110];
    select one rto2 related by assoc->R_AOTH[R210]->R_RTO[R204];
    select any rtida2 related by rto2->O_RTIDA[R110];
    return not_empty rtida1 and not_empty rtida2;
  else
    select one subsup related by r_rel->R_SUBSUP[R206];                                                                                               
    if ( not_empty subsup )
      select one rto related by subsup->R_SUPER[R212]->R_RTO[R204];
      select any rtida related by rto->O_RTIDA[R110];
      return not_empty rtida;
    end if;                                                                                                                                          
  end if;                                                                                                                                            
end if;
return false;',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("8f8fee83-ef8b-41f8-a211-0780e3a3d121",
	"41efa205-a6ab-412d-a8c9-a42846dc0ffc",
	'r_rel',
	"4480b008-8c74-4f57-9256-08b7365520bc",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("4480b008-8c74-4f57-9256-08b7365520bc",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Association>',
	'',
	'',
	'../../../../../mcooa/models/mcooa/ooaofooa/Association/Association.xtuml');
INSERT INTO PE_PE
	VALUES ("41efa205-a6ab-412d-a8c9-a42846dc0ffc",
	1,
	"65dec46c-ec8b-4464-b227-a7853cadd3b4",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("eef3919f-d649-464f-8fdf-403f36e1a626",
	"00000000-0000-0000-0000-000000000000",
	'r_rel_is_reflexive',
	'',
	'r_rel = param.r_rel;
select one srel related by r_rel->R_SIMP[R206];
if ( not_empty srel )
  select many part_set related by srel->R_PART[R207];
  if ( cardinality part_set > 1 ) 
    select any part1 related by srel->R_PART[R207];
    select any part2 related by srel->R_PART[R207] 
      where selected.OIR_ID != part1.OIR_ID;
    if ( part1.Obj_ID == part2.Obj_ID )
      return true;
    end if;
  else
    select any part related by srel->R_PART[R207];
    select one form related by srel->R_FORM[R208];
    if ( not_empty form )
      if ( part.Obj_ID == form.Obj_ID )
        return true;
      end if;
    end if;
  end if;
else
  select one arel related by r_rel->R_ASSOC[R206]; 
  if ( not_empty arel )
    select one aone related by arel->R_AONE[R209];
    select one aoth related by arel->R_AOTH[R210];
    if ( aone.Obj_ID == aoth.Obj_ID )
      return true;
    end if;
  end if;
end if;
return false;',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("641d0430-1ae1-4926-8811-b9e88ecae4b5",
	"eef3919f-d649-464f-8fdf-403f36e1a626",
	'r_rel',
	"4480b008-8c74-4f57-9256-08b7365520bc",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO PE_PE
	VALUES ("eef3919f-d649-464f-8fdf-403f36e1a626",
	1,
	"65dec46c-ec8b-4464-b227-a7853cadd3b4",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("048207a8-73fc-4953-89b3-d15ad41d490e",
	"00000000-0000-0000-0000-000000000000",
	'is_primitive_type',
	'',
	'type = param.type;
select one builtin related by type->BuiltInType[R407];
if ( not_empty builtin )
  return builtin.primitive;
else
  return false;
end if;',
	"ba5eda7a-def5-0000-0000-000000000001",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("9fdbcb24-df85-4745-ace8-2c6ae0526668",
	"048207a8-73fc-4953-89b3-d15ad41d490e",
	'type',
	"be784cfe-3f8b-4e25-b183-484885b71173",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("be784cfe-3f8b-4e25-b183-484885b71173",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Type>',
	'',
	'',
	'../architecture/type/type.xtuml');
INSERT INTO PE_PE
	VALUES ("048207a8-73fc-4953-89b3-d15ad41d490e",
	1,
	"65dec46c-ec8b-4464-b227-a7853cadd3b4",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("f1448a4b-322d-432c-8e4d-b2bed4da0a51",
	"00000000-0000-0000-0000-000000000000",
	'linkParameter',
	'',
	'invocable = param.invocable;
parm = param.parameter;
// link parameter
select any last_parm related by invocable->FormalParameter[R429];
select one next_parm related by last_parm->FormalParameter[R404.''precedes''];
while ( not_empty next_parm )
  last_parm = next_parm;
  select one next_parm related by last_parm->FormalParameter[R404.''precedes''];
end while;
if ( not_empty last_parm )
  relate parm to last_parm across R404.''follows'';
end if;
relate parm to invocable across R429;',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("f53b37e1-4ed0-4e69-a507-baffdbcaf1b7",
	"f1448a4b-322d-432c-8e4d-b2bed4da0a51",
	'invocable',
	"30c7a5ba-c6d9-44fd-8e61-f22cde8fdc41",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("30c7a5ba-c6d9-44fd-8e61-f22cde8fdc41",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Invocable Object>',
	'',
	'',
	'../architecture/invocable/invocable.xtuml');
INSERT INTO S_SPARM
	VALUES ("4d4b1833-0b8d-449c-a639-03814d2954e3",
	"f1448a4b-322d-432c-8e4d-b2bed4da0a51",
	'parameter',
	"a4048d05-d8f6-4f96-b1fc-79a73158a744",
	0,
	'',
	"f53b37e1-4ed0-4e69-a507-baffdbcaf1b7",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("a4048d05-d8f6-4f96-b1fc-79a73158a744",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Formal Parameter>',
	'',
	'',
	'../architecture/invocable/invocable.xtuml');
INSERT INTO PE_PE
	VALUES ("f1448a4b-322d-432c-8e4d-b2bed4da0a51",
	1,
	"65dec46c-ec8b-4464-b227-a7853cadd3b4",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("bfe0ba14-5516-41e9-9953-ffbf536c26ca",
	"00000000-0000-0000-0000-000000000000",
	'oirGetPhrase',
	'',
	'select any r_oir from instances of R_OIR where ( selected.OIR_ID == param.r_oir_id );
phrase = "";
select one r_part related by r_oir->R_RTO[R203]->R_PART[R204];
if ( not_empty r_part )
  phrase = r_part.Txt_Phrs;
else
select one r_form related by r_oir->R_RGO[R203]->R_FORM[R205];
if ( not_empty r_form )
  phrase = r_form.Txt_Phrs;
else
select one r_aone related by r_oir->R_RTO[R203]->R_AONE[R204];
if ( not_empty r_aone )
  phrase = r_aone.Txt_Phrs;
else
select one r_aoth related by r_oir->R_RTO[R203]->R_AOTH[R204];
if ( not_empty r_aoth )
  phrase = r_aoth.Txt_Phrs;
end if; end if; end if; end if;
return phrase;',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("b6fa1c16-12ed-4a37-8e66-5555a1b945b6",
	"bfe0ba14-5516-41e9-9953-ffbf536c26ca",
	'r_oir_id',
	"ba5eda7a-def5-0000-0000-000000000005",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO PE_PE
	VALUES ("bfe0ba14-5516-41e9-9953-ffbf536c26ca",
	1,
	"65dec46c-ec8b-4464-b227-a7853cadd3b4",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("e656d8d1-f462-4839-b559-dde2305fb891",
	"00000000-0000-0000-0000-000000000000",
	'packageToMarkingPath',
	'',
	's = param.package;
slash_index = STR::indexof( haystack:s, needle:"." );
while ( -1 != slash_index )
  left = STR::substr( s:s, begin:0, end:slash_index );
  right = STR::substr( s:s, begin:slash_index + 1, end:-1 );
  s = left + "::" + right;
  slash_index = STR::indexof( haystack:s, needle:"." );
end while;
return s;',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("7bbbee75-a42d-4bd2-8ac8-ad625e419e96",
	"e656d8d1-f462-4839-b559-dde2305fb891",
	'package',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO PE_PE
	VALUES ("e656d8d1-f462-4839-b559-dde2305fb891",
	1,
	"65dec46c-ec8b-4464-b227-a7853cadd3b4",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("fce08416-f2c5-4726-8883-42ff05eed3c6",
	"00000000-0000-0000-0000-000000000000",
	'getFileForStatement',
	'',
	'smt = param.smt;
// TODO, this only works for the outer block
select one invocable related by smt->CodeBlock[R450.''is contained by'']->InvocableObject[R430.''is invoked first for''];
select one file related by invocable->Function[R427]->ComponentDefinition[R405.''can execute synchronously within'']->File[R401];
if ( empty file )
  // TODO message
  if ( empty file )
    select one file related by invocable->Operation[R427]->Class[R416.''provided by'']->File[R401];
    if ( empty file )
      select one file related by invocable->AttributeDerivation[R427]->AttributeAccessor[R441.''calculates value for'']->Attribute[R4510.''gets and sets'']->Class[R410.''abstracts data for'']->File[R401];
      if ( empty file )
        select one file related by invocable->UtilityFunction[R427]->Utility[R4559.''provided by'']->File[R401];
      end if;
    end if;
  end if;
end if;
return file;',
	"7f1815c6-b9da-4371-acbc-8297d9eaecf4",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("973519d7-43c7-4680-a5f9-1ad3066d5ce6",
	"fce08416-f2c5-4726-8883-42ff05eed3c6",
	'smt',
	"056a9b55-7c4c-45a4-a684-ea45fce8fa86",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_DT_PROXY
	VALUES ("056a9b55-7c4c-45a4-a684-ea45fce8fa86",
	"00000000-0000-0000-0000-000000000000",
	'inst_ref<Statement>',
	'',
	'',
	'../architecture/statement/statement.xtuml');
INSERT INTO PE_PE
	VALUES ("fce08416-f2c5-4726-8883-42ff05eed3c6",
	1,
	"65dec46c-ec8b-4464-b227-a7853cadd3b4",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("b4f44b41-e3a3-47f4-b420-c665fd4b47ec",
	"00000000-0000-0000-0000-000000000000",
	'getOalStatement',
	'',
	'// TODO this routine assumes a statement is only one line long

body = param.body;
line_num = param.line_num;

i = 0;
line = "";
while ( i < line_num )
  end_of_line = STR::indexof( haystack:body, needle:"\n" );
  if ( -1 != end_of_line )
    line = STR::substr( s:body, begin:0, end:end_of_line );
    body = STR::substr( s:body, begin:end_of_line+1, end:-1 );
  else
    line = body;
    break;
  end if;
  i = i + 1;
end while;

return line;',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("33d3aca4-7f12-48f0-99fe-9f6f93f91c03",
	"b4f44b41-e3a3-47f4-b420-c665fd4b47ec",
	'body',
	"ba5eda7a-def5-0000-0000-000000000004",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO S_SPARM
	VALUES ("f99d2ecd-8a65-479d-aaf3-8ed93e11f360",
	"b4f44b41-e3a3-47f4-b420-c665fd4b47ec",
	'line_num',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"33d3aca4-7f12-48f0-99fe-9f6f93f91c03",
	'');
INSERT INTO PE_PE
	VALUES ("b4f44b41-e3a3-47f4-b420-c665fd4b47ec",
	1,
	"65dec46c-ec8b-4464-b227-a7853cadd3b4",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("7477ef1c-0e32-4619-b3c4-829d006c04ad",
	"00000000-0000-0000-0000-000000000000",
	'getIndent',
	'',
	'select any tab_width_mark from instances of Mark where ( selected.markable_name == "*" and selected.path == "*" and selected.feature_name == "TabWidth" );
indent = "";
default_tab_width = 4;
tab_width = 0;
if ( not_empty tab_width_mark )
  tab_width = STR::atoi( s:tab_width_mark.value );
else
  tab_width = default_tab_width;
end if;
i = 0;
while ( i < param.tab_depth )
  j = 0;
  while ( j < tab_width )
    indent = indent + " ";
    j = j + 1;
  end while;
  i = i + 1;
end while;
return indent;',
	"ba5eda7a-def5-0000-0000-000000000004",
	1,
	'',
	0);
INSERT INTO S_SPARM
	VALUES ("1224b7b5-f2fe-42aa-bc11-fb5adeac9421",
	"7477ef1c-0e32-4619-b3c4-829d006c04ad",
	'tab_depth',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO PE_PE
	VALUES ("7477ef1c-0e32-4619-b3c4-829d006c04ad",
	1,
	"65dec46c-ec8b-4464-b227-a7853cadd3b4",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO PE_PE
	VALUES ("65dec46c-ec8b-4464-b227-a7853cadd3b4",
	1,
	"acef9848-aa6d-428b-9882-cc90deb0a54a",
	"00000000-0000-0000-0000-000000000000",
	7);
INSERT INTO EP_PKG_PROXY
	VALUES ("acef9848-aa6d-428b-9882-cc90deb0a54a",
	"aa743d3c-66dc-49df-a19a-ffbadf9c9d1b",
	"aa743d3c-66dc-49df-a19a-ffbadf9c9d1b",
	'ciera',
	'',
	0,
	'../ciera.xtuml');
INSERT INTO S_SYS_PROXY
	VALUES ("aa743d3c-66dc-49df-a19a-ffbadf9c9d1b",
	'ciera',
	1,
	'../../ciera.xtuml');
